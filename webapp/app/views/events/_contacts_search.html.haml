-# Copyright (C) 2007, 2008, 2009 The Collaborative Software Foundation
-#
-# This file is part of TriSano.
-#
-# TriSano is free software: you can redistribute it and/or modify it under the terms of the
-# GNU Affero General Public License as published by the Free Software Foundation, either 
-# version 3 of the License, or (at your option) any later version.
-#
-# TriSano is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
-# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
-# See the GNU Affero General Public License for more details.
-# 
-# You should have received a copy of the GNU Affero General Public License along with TriSano. 
-# If not, see http://www.gnu.org/licenses/agpl-3.0.txt.

-# Display the search results of a contact live search

%br
- if defined? @results
  -if @results.empty?
    %b No results
  -else
    %table.list
      %tr
        %th Name
        %th Birth Date
        %th Gender
        %th Event Type
        %th Jurisdiction
        %th Created Date
        %th Disease
        %th Actions
      - previous_entity_id = nil
      - for result in @results do
        - includes_event = !result['event_id'].blank?

        - result_class = 'search-active tabular'
        - if (!includes_event && !result['deleted_at'].nil?)
          - result_class = 'search-inactive tabular'

        - current_entity_id = result['entity_id']
        - if previous_entity_id != current_entity_id
          - output_name = true
          - previous_entity_id = current_entity_id
        - else
          - output_name = false
        
        - if includes_event
          - jurisdictions = pg_array(result['secondary_jurisdictions']) << result['jurisdiction_entity_id']
          - can_update = User.current_user.is_entitled_to_in?(:update_event, jurisdictions)
          - can_view   = User.current_user.is_entitled_to_in?(:view_event,   jurisdictions)

        %tr{:class => result_class, :id => "entity_#{result['entity_id']}"}
          %td 
            - if output_name
              = "#{h(result['last_name'])}, #{h(result['first_name'])}"
            - else
              %i &nbsp;&nbsp;Same as above
          %td
            = h(result['birth_date']) if output_name
          %td
            = h(result['birth_gender']) if output_name
          %td
            - if includes_event
              = h(result['event_type'].underscore.humanize)
            - else
              %i None
          %td
            = h(result['jurisdiction_short_name']) if includes_event
          %td
            = h(result['event_onset_date']) if includes_event
          %td
            - if includes_event
              - if can_update || can_view
                = h(result['disease_name'])
              - else
                Private
          %td
            - fields_for(:morbidity_event, MorbidityEvent.new, :builder => ExtendedFormBuilder) do |f|
              - contact_event = ContactEvent.new
              - contact_event.build_interested_party(:primary_entity_id => result['entity_id'])
              - contact_event.build_participations_contact
              - contact_event.interested_party.person_entity.telephones.build
              = add_record_link f, :contact_child_events, "Add contact", :object => contact_event, :partial => "events/contact_from_search", :html_id => "add_contact_#{result['event_id']}"
%hr
