-# Copyright (C) 2007, 2008, 2009, 2010, 2011 The Collaborative Software Foundation
-#
-# This file is part of TriSano.
-#
-# TriSano is free software: you can redistribute it and/or modify it under the terms of the
-# GNU Affero General Public License as published by the Free Software Foundation, either
-# version 3 of the License, or (at your option) any later version.
-#
-# TriSano is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
-# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
-# See the GNU Affero General Public License for more details.
-#
-# You should have received a copy of the GNU Affero General Public License along with TriSano.
-# If not, see http://www.gnu.org/licenses/agpl-3.0.txt.


%fieldset
  %legend=t 'clinical_info'

  -core_section :disease_section, event_form do
    - event_form.fields_for(:disease_event, :builder => ExtendedFormBuilder) do |d|
      - core_element_show :disease_id, d, :horiz do
        = d.label :disease_id
        = h(@event.safe_call_chain(:disease_event, :disease, :disease_name))
      - core_element_show :disease_onset_date, d, :horiz do
        = d.label :disease_onset_date
        = ld(@event.safe_call_chain(:disease_event, :disease_onset_date))
      - core_element_show :date_diagnosed, d, :horiz do
        = d.label(:date_diagnosed)
        = ld(@event.safe_call_chain(:disease_event, :date_diagnosed))

  -core_section :hospitalized_health_facilities_section, event_form do
    - event_form.fields_for(:disease_event, :builder => ExtendedFormBuilder) do |disease_form|
      - core_element_show :hospitalized_id, disease_form, 'vert-break' do
        = disease_form.label(:hospitalized_id)
        = h(@event.disease_event ? lookup_code(@event.disease_event.hospitalized) : '&nbsp;')
    - if @event.hospitalization_facility_ids.compact.empty?
      %h3{:style => 'clear: both;'}=t('no_hospitalized_health_facilities')
    - else
      - event_form.fields_for(:hospitalization_facilities, :builder => ExtendedFormBuilder) do |hf|
        %span{:class => "vert-break"}
          - core_element_show :secondary_entity_id, event_form, :horiz do
            = hf.label(:secondary_entity_id)
            = h(hf.object.safe_call_chain(:place_entity, :place, :name))
          - hf.fields_for(:hospitals_participation, :builder => ExtendedFormBuilder) do |hp|
            - core_element_show :admission_date, hp, :horiz do
              = hp.label(:admission_date)
              = ld(hp.object.safe_call_chain(:admission_date))
            - core_element_show :discharge_date, hp, :horiz do
              = hp.label(:discharge_date)
              = ld(hp.object.safe_call_chain(:discharge_date))
            - core_element_show :medical_record_number, hp, :horiz do
              = hp.label(:medical_record_number)
              = ld(hp.object.safe_call_chain(:medical_record_number))
  -core_section :mortality_status_section, event_form do
    - event_form.fields_for(:disease_event, :builder => ExtendedFormBuilder) do |d|
      - core_element_show :died_id, d, :horiz do
        = d.label(:died_id)
        = h(lookup_code(@event.safe_call_chain(:disease_event, :died)))
    - event_form.fields_for(:interested_party, :builder => ExtendedFormBuilder) do |active_patient_form|
      - active_patient_form.fields_for(:person_entity, :builder => ExtendedFormBuilder) do |primary_form|
        - primary_form.fields_for(:person, @event.interested_party.person_entity.person, :builder => ExtendedFormBuilder) do |person_form|
          - core_element_show :date_of_death, person_form, :horiz do
            = person_form.label(:date_of_death)
            = ld(@event.interested_party.person_entity.person.date_of_death)

  -core_section :pregnancy_status_section, event_form do
    - event_form.fields_for(:interested_party, :builder => ExtendedFormBuilder) do |patient_fields|
      - patient_fields.fields_for(:risk_factor, :builder => ExtendedFormBuilder) do |risk_factor_form|
        - core_element_show :pregnant_id, risk_factor_form, :horiz do
          = risk_factor_form.label(:pregnant_id)
          = h(lookup_code(@event.safe_call_chain(:interested_party, :risk_factor, :pregnant)))
        - core_element_show :pregnancy_due_date, risk_factor_form, :horiz do
          = risk_factor_form.label(:pregnancy_due_date)
          = ld(@event.safe_call_chain(:interested_party, :risk_factor, :pregnancy_due_date))

  %span{:clear => 'all'}

  = render :partial => 'events/treatments_show', :locals => { :f => event_form, :event => @event }

  -core_section :clinicians_section, event_form do
    -core_element_show(:clinicians, event_form, :horiz) do
      -if @event.clinician_ids.compact.blank?
        %h3=t('no_clinicians_for_event')
      -else
        %table.list
          %tr
            %th=t('name')
            %th=t('phone')

          -# A clinician (participation) may have one name and zero or one phone numbers
          - for clinician in @event.clinicians
            -# Note: Blank clinicians and phones will exist (coutesy of the view) even if there are none in the DB
            - next if clinician.new_record?
            - clinician_entity = clinician.person_entity
            - clinician_person = clinician_entity.person
            - clinician_phone  = clinician_entity.primary_phone

            %tr
              %td= h(clinician_person.last_comma_first)
              %td
                = h(clinician_phone.simple_format)

  -core_section :diagnostic_facilities_section, event_form do
    -core_element_show(:diagnostic_facilities, event_form, :horiz) do
      - if @event.diagnostic_facility_ids.compact.empty?
        %h3=t('no_diagnosing_health_facilities')
      - else
        %table.list
          %tr
            %th=t('diagnosing_health_facility')
            %th=t('address')
            %th=t('type')

          - for diagnostic in @event.diagnostic_facilities
            %tr
              %td= h(diagnostic.place_entity.place.name)
              %td= h(preferred_address(diagnostic.safe_call_chain(*%w(place_entity place))))
              %td= h(diagnostic.safe_call_chain(:place_entity, :place, :formatted_place_descriptions))
