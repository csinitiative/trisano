-# Copyright (C) 2007, 2008, 2009 The Collaborative Software Foundation
-#
-# This file is part of TriSano.
-#
-# TriSano is free software: you can redistribute it and/or modify it under the 
-# terms of the GNU Affero General Public License as published by the 
-# Free Software Foundation, either version 3 of the License, 
-# or (at your option) any later version.
-#
-# TriSano is distributed in the hope that it will be useful, but 
-# WITHOUT ANY WARRANTY; without even the implied warranty of 
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
-# GNU Affero General Public License for more details.
-#
-# You should have received a copy of the GNU Affero General Public License 
-# along with TriSano. If not, see http://www.gnu.org/licenses/agpl-3.0.txt.
%legend Place Exposures

= h @event.safe_call_chain(:disease_event, :disease, :place_lead_in)

-# Handles pre- and post-questions and help for places as a whole
- core_element :places, f, 'vert-break' do

  %div{:id => 'place_child_events'}
    = live_search('Search for an existing place', :search_field => 'places_search', :results => 'live_search_places', :select => 'place_name', :event_type => f.object_name)

    -# Currently we don't allow editing place information (because changing it for one event will change it for all).
    -# This will change soon, and when it does we can undo this.
    - f.fields_for(:place_child_events, :builder => ExtendedFormBuilder) do |place_form|
      - next if place_form.object.deleted_at
      - if place_form.object.new_record? && place_form.object.interested_place.primary_entity_id.nil?
        = render :partial => 'events/place_exposure', :locals => { :f => place_form }
      - else
        = render :partial => 'events/place_exposure_show', :locals => { :f => place_form }
      #live_search_places

  %span{:style => "clear: both; padding-top: 20px"}

    - blank_place = PlaceEvent.new
    - blank_place.build_participations_place
    - blank_place.build_interested_place
    - blank_place.interested_place.build_place_entity
    - blank_place.interested_place.place_entity.build_place

    = add_record_link f, :place_child_events, "Add a Place Exposure", :object => blank_place, :partial => "events/place_exposure"
    - pl_geocode = render_geocode_places(f.object, f.object.place_child_events)
    = (pl_geocode !~ /Show/ ? "" : " | " + pl_geocode) unless pl_geocode.nil?
