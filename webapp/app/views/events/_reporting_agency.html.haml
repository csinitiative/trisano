-# Copyright (C) 2007, 2008, 2009, 2010 The Collaborative Software Foundation
-#
-# This file is part of TriSano.
-#
-# TriSano is free software: you can redistribute it and/or modify it under the
-# terms of the GNU Affero General Public License as published by the
-# Free Software Foundation, either version 3 of the License,
-# or (at your option) any later version.
-#
-# TriSano is distributed in the hope that it will be useful, but
-# WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU Affero General Public License for more details.
-#
-# You should have received a copy of the GNU Affero General Public License
-# along with TriSano. If not, see http://www.gnu.org/licenses/agpl-3.0.txt.

- agency_form = nil
- if f
  - agency_form = f
- else
  - fields_for("morbidity_event[reporting_agency_attributes]", reporting_agency, :builder => ExtendedFormBuilder) do |ra|
    - agency_form = ra

-# Hack! Rendering the "Add a reporting agency" link
- if reporting_agency == 'force new'
  - reporting_agency = Place.new
-else
  - reporting_agency = agency_form.object.place_entity.place

- if reporting_agency.new_record?
  - agency_form.fields_for(:place_entity, :builder => ExtendedFormBuilder) do |pe|
    - pe.fields_for(:place, :builder => ExtendedFormBuilder) do |p|
      = error_messages_for :object => reporting_agency
      - core_element :name, p, :horiz do
        = p.label(:name, t('reporting_agency_name'))
        = p.text_field(:name, :size => 25, :class => 'required_if_others')

      - pe.fields_for(:telephones, :builder => ExtendedFormBuilder) do |phone_fields|
        -if Telephone.use?(:country_code)
          - core_element :country_code, phone_fields, :horiz do
            = phone_fields.label(:country_code)
            = phone_fields.core_text_field(:country_code, {:size => 3}, @event)
        -if Telephone.use?(:area_code)
          - core_element :area_code, phone_fields, :horiz do
            = phone_fields.label(:area_code)
            = phone_fields.core_text_field(:area_code, {:size => 3}, @event)
        - core_element :phone_number, phone_fields, :horiz do
          = phone_fields.label(:phone_number)
          = phone_fields.core_text_field(:phone_number, {:size => 8}, @event)
        - core_element :extension, phone_fields, :horiz do
          = phone_fields.label(:extension)
          = phone_fields.core_text_field(:extension, {:size => 6}, @event)

      - core_element :agency_type, p, 'vert-break' do
        = agency_type_selector(p)
- else
  %div
    - core_element :name, agency_form, :horiz do
      = agency_form.hidden_field(:secondary_entity_id)
      = agency_form.label(:name)
      = h(reporting_agency.name) || "&nbsp;"
    - core_element :agency_type, agency_form, :horiz do
      = agency_form.label(:agency_types)
      = h(reporting_agency.formatted_place_descriptions)

    - if agency_form.object.new_record?
      -# This place was added via live search. Provide a mechanism for removing the place before saving.
      &nbsp;
      %br
      = link_to_function(t("remove"), "this.up().remove()", :id => "remove_#{uniq_id}")
    - else
      %span.horiz
        = agency_form.hidden_field(:id)
        = agency_form.label :_delete
        = agency_form.check_box :_delete

