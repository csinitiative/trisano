-# Copyright (C) 2007, 2008, 2009 The Collaborative Software Foundation
-#
-# This file is part of TriSano.
-#
-# TriSano is free software: you can redistribute it and/or modify it under the terms of the
-# GNU Affero General Public License as published by the Free Software Foundation, either
-# version 3 of the License, or (at your option) any later version.
-#
-# TriSano is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
-# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
-# See the GNU Affero General Public License for more details.
-#
-# You should have received a copy of the GNU Affero General Public License along with TriSano.
-# If not, see http://www.gnu.org/licenses/agpl-3.0.txt.


%fieldset
  %legend
    =t 'contact_info'
    %span{:id => 'contacts_info_hide', :onClick => "Element.hide('contacts'); Element.hide('contacts_info_hide'); Element.show('contacts_info_show'); return false;"}= hide
    %span{:id => 'contacts_info_show', :onClick => "Element.show('contacts'); Element.hide('contacts_info_show'); Element.show('contacts_info_hide'); return false;", :style => "display: none;"}= show

  - unless @event.disease.nil? || @event.disease.disease.nil? || @event.disease.disease.contact_lead_in.blank?
    = h @event.disease.disease.contact_lead_in
    %br
    %br

  #contacts
    -# Handles pre- and post-questions and help for contacts as a whole
    - core_element :contacts, f, 'vert-break' do

      = text_field_tag('contact_search_name')
      = button_to_remote(t('search_button'), :method => :get, :url => {:controller => "events", :action => 'contacts_search'}, :with => "'name=' + $('contact_search_name').value", :update => 'contact_search_results', :loading => "$('contact-search-spinner').show();", :complete => "$('contact-search-spinner').hide();")
      = image_tag('redbox_spinner.gif', :id => 'contact-search-spinner', :style => "height: 16px; width: 16px; display: none;")
      %div#contact_search_results

      #contact_child_events
        - f.fields_for(:contact_child_events, :builder => ExtendedFormBuilder) do |c|
          - next if c.object.deleted_at
          - if c.object.new_record? && c.object.interested_party.primary_entity_id.nil?
            = render :partial => "events/contact", :locals => { :f => c }
          - else
            = render :partial => "events/contact_show", :locals => { :f => c }

        %p{:style => 'clear: both;'}= add_record_link f, :contact_child_events, t('add_contact'), :object => blank_contact, :partial => "events/contact"
        =render_extensions :cmr_contacts_extension_renderers

      - unless @event.morbidity_child_events.empty?
        #morbidity_child_events
          %fieldset
            %legend=t 'cmr_contacts'
            %i=t 'elevated_to_morbidity_events'
            = render :partial => 'events/contacts_show', :locals => { :contacts => @event.morbidity_child_events }

      - if @event.parent_event
        #morbidity_parent_event
          %fieldset
            %legend=t 'parent_cmr'
            %i=t('this_patient_is_a_contact_of')
            = render :partial => 'events/contacts_show', :locals => { :contacts => [@event.parent_event] }
