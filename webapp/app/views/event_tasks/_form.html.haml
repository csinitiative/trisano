-# Copyright (C) 2007, 2008, 2009, 2010, 2011 The Collaborative Software Foundation
-#
-# This file is part of TriSano.
-#
-# TriSano is free software: you can redistribute it and/or modify it under the terms of the
-# GNU Affero General Public License as published by the Free Software Foundation, either
-# version 3 of the License, or (at your option) any later version.
-#
-# TriSano is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
-# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
-# See the GNU Affero General Public License for more details.
-#
-# You should have received a copy of the GNU Affero General Public License along with TriSano.
-# If not, see http://www.gnu.org/licenses/agpl-3.0.txt.

%span{ :class => "vert" }
  = f.label(:name)
  = f.text_field(:name, :size => 20)

%span{ :class => "vert" }
  = f.label(:notes)
  = f.text_area(:notes, :rows => 5, :cols => 50)

- unless @task.new_record?
  %span{ :class => "vert" }
    = f.label(:status)
    = f.select(:status, Task.status_array)

%span{ :class => "vert" }
  = f.label(:category)
  = f.collection_select(:category_id, ExternalCode.active.find_all_by_code_name('task_category'), :id, :code_description, {:include_blank => true})

%span{ :class => "vert" }
  = f.label(:priority)
  = f.select(:priority, Task.priority_array, {:include_blank => @task.new_record?})

%span{ :class => "vert" }
  = f.label(:due_date)
  = f.calendar_date_select(:due_date, {:year_range => 0.years.from_now...2.years.from_now})

  - if @task.new_record?
    = t('repeat')
    = f.select(:repeating_interval, Task.interval_array, {:include_blank => true})
    = t('until')
    = f.calendar_date_select(:until_date, {:year_range => 0.years.from_now...2.years.from_now})

- if User.current_user.is_entitled_to?(:assign_task_to_user)
  - assignees = User.task_assignees_for_jurisdictions(User.current_user.jurisdictions_for_privilege(:assign_task_to_user))
  - unless assignees.empty?
    %span{ :class => "vert" }
      = f.label(:user)
      = f.collection_select(:user_id, assignees, :id, :best_name, {:include_blank => true})
