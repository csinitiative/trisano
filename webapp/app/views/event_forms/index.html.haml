-# Copyright (C) 2007, 2008, 2009, 2010, 2011 The Collaborative Software Foundation
-#
-# This file is part of TriSano.
-#
-# TriSano is free software: you can redistribute it and/or modify it under the terms of the
-# GNU Affero General Public License as published by the Free Software Foundation, either 
-# version 3 of the License, or (at your option) any later version.
-#
-# TriSano is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
-# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
-# See the GNU Affero General Public License for more details.
-# 
-# You should have received a copy of the GNU Affero General Public License along with TriSano. 
-# If not, see http://www.gnu.org/licenses/agpl-3.0.txt.

- content_for :title do
  =t('event_forms')

- content_for :name do
  = render(:partial => 'events/basic_event_info', :locals => { :event => @event })

- can_remove = User.current_user.is_entitled_to_in?(:remove_form_from_event, @event.all_jurisdictions.collect { | participation | participation.secondary_entity_id })
- can_add = User.current_user.is_entitled_to_in?(:add_form_to_event, @event.all_jurisdictions.collect { | participation | participation.secondary_entity_id })

#forms_in_use
  #rot
    %h2=t('forms_in_use')
    - if @event.form_references.size > 0
      - form_for(:event_form, :url => { :action => "destroy", :event_id => @event.id }) do |f|
        %table.list
          %tr
            %th.forminformation
              =t('form_information')
            %th=t('diseases')
            %th=t('jurisdiction')
            %th=t('event_type')
            - if can_remove
              %th=t('remove_from_event')
          - for form in @forms_in_use
            %tr.roll
              %td.forminformation
                .formname
                  = form.name
                  %br
                .description
                  = h form.description
              %td
                %ul
                  - form.diseases.each do |disease|
                    %li.diseaselist
                      = h disease.disease_name
              %td
                - if form.jurisdictions.empty?
                  = h t("all")
                - else
                  %ul
                    - form.jurisdictions.each do |j|
                      %li.diseaselist= h j.place.name
              %td
                = h t(form.event_type)
              - if can_remove
                %td
                  = check_box_tag("forms_to_remove[]", form.id, false, :id => "forms_to_remove_#{form.id}")
        - if can_remove
          %br
          = submit_tag(t('remove_forms'), { :id => 'remove_forms', :confirm => t('confirm_remove_form') })
    -else
      %em
        =t('none_in_use')


#forms_available
  #rot
    %br
    %hr{:style => 'color: #090; background-color: #090; height: 2px'}
    %h2=t('forms_available')
    - if @forms_available.size > 0
      - form_for(:event_form) do |f|
        %table.list
          %tr
            %th.forminformation
              =t('form_information')
            %th=t('diseases')
            %th=t('jurisdiction')
            %th=t('event_type')
            - if can_add
              %th=t('add_to_event')
            - for form in @forms_available
              %tr.roll
                %td.forminformation
                  .formname
                    = form.name
                    %br
                  .description
                    = h form.description
                %td
                  %ul
                    - form.diseases.each do |disease|
                      %li.diseaselist
                        = h disease.disease_name
                %td
                  - if form.jurisdictions.empty?
                    = h t("all")
                  - else
                    %ul
                    - form.jurisdictions.each do |j|
                      %li.diseaselist= h j.place.name
                %td
                  = h(t(form.event_type.underscore))
                - if can_add
                  %td
                    = check_box_tag("forms_to_add[]", form.id, false, :id => "forms_to_add_#{form.id}")

        - if can_add
          %br
          = submit_tag(t('add_forms'), :id => "add_forms")
    - else
      %em=t('all_forms_in_use')
