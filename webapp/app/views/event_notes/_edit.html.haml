-# Copyright (C) 2007, 2008, 2009, 2010, 2011 The Collaborative Software Foundation
-#
-# This file is part of TriSano.
-#
-# TriSano is free software: you can redistribute it and/or modify it under the terms of the
-# GNU Affero General Public License as published by the Free Software Foundation, either
-# version 3 of the License, or (at your option) any later version.
-#
-# TriSano is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
-# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
-# See the GNU Affero General Public License for more details.
-#
-# You should have received a copy of the GNU Affero General Public License along with TriSano.
-# If not, see http://www.gnu.org/licenses/agpl-3.0.txt.


- if @event.notes.empty?
  %b=t('new_record_no_notes')
- else
  = render :partial => 'event_notes/filter_nav', :locals => { :notes => @event.notes, :mode => 'edit' }

  #existing-notes
    %table.list
      - no_saved_notes = true
      - for note in notes
        -# This can happen if validation fails and this form is re-rendered.  And also if there are
        -# no notes, but the view created a blank.
        - next if note.new_record?
        - no_saved_notes = false
        %tr
          %th.forminformation
            = h(note.user.try(:best_name))
          %th
        %tr.roll
          %td.forminformation
            %small
              - unless note.note_type.blank?
                %span{ :class => 'note-type' }
                  = h("#{note.note_type.humanize} ")
              = ld(note.created_at, {:format => :notes})
          %td
            -# Not building on the builder object referenced with 'f' because this partial can be redrawn with Ajax
            - fields_for("#{h(@event.class.name.underscore)}[notes_attributes][#{h(note.id)}]", note, :builder => ExtendedFormBuilder) do |note_fields|
              = note_fields.hidden_field :id
              %div{:style => "position: absolute; right: 30px;"}
                %small
                  =t "strike_through"
                  = note_fields.check_box :struckthrough, :onclick => "toggle_strike_through('note_#{note.id}')"
        %tr
          %td
            = render_note_body note
          %td
        - if no_saved_notes
          %b=t('no_notes')
%br{:clear => 'all' }
