-# Copyright (C) 2007, 2008, 2009, 2010, 2011 The Collaborative Software Foundation
-#
-# This file is part of TriSano.
-#
-# TriSano is free software: you can redistribute it and/or modify it under the terms of the
-# GNU Affero General Public License as published by the Free Software Foundation, either
-# version 3 of the License, or (at your option) any later version.
-#
-# TriSano is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
-# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
-# See the GNU Affero General Public License for more details.
-#
-# You should have received a copy of the GNU Affero General Public License along with TriSano.
-# If not, see http://www.gnu.org/licenses/agpl-3.0.txt.

%tr
  %td
    %div{:id => "message_#{staged_message.id}", :class => "staged-message"}
      .header
        %p= "#{h staged_message.patient.patient_name}&nbsp;&ndash;&nbsp;#{t('dob')} #{ld(staged_message.patient.birth_date)||t('unknown')}"
      -staged_message.observation_requests.each_with_index do |obr, index|
        .specimen
          %p= "OBR #{index+1}"
          %p= t "specimen_source_is", :source => h(obr.specimen_source)
          %p= t "collected_on_date", :date =>ld(obr.collection_date)
          - unless obr.test_performed.blank?
            %p
              = "#{t 'loinc_code'}:"
              &= obr.test_performed
          - unless obr.common_test_type.blank?
            %p
              = "#{t 'test_type'}:"
              &= obr.common_test_type
        .results
          %table
            %tr
              %th=t 'test_date'
              %th=t 'loinc_code'
              %th=t 'test_type'
              %th=t 'result'
              %th=t 'units'
              %th=t 'status'
              %th=t 'reference_range'
            =render obr.tests

      .footer
        - if staged_message.message_batch
          - label = t :staged_message_batch, :id => staged_message.message_batch.id
          =link_to label, staged_message.message_batch, :title => label, :class => 'batch-link'
        %p
          %small= h staged_message.lab_name
        %div.tools
          -if (staged_message.state == StagedMessage.states[:pending]) || (staged_message.state == StagedMessage.states[:unprocessable])
            - form_tag(event_search_staged_message_path(staged_message), :style => "display: inline") do
              = hidden_field_tag :name, staged_message.patient.patient_name
              = hidden_field_tag :birth_date, staged_message.patient.birth_date
              = link_to_function t('similar_events'), "this.parentNode.submit()", :class => 'staged-message-link'
            = " | "
            - form_tag(discard_staged_message_path(staged_message), :style => "display: inline", :id => "discard_#{staged_message.id}") do
              = hidden_field_tag('staged_message_id', staged_message.id)
              = link_to_function(t("discard"), "this.parentNode.submit()", :class => 'staged-message-discard-link staged-message-link')
          %p
            = ct('state')
            - if staged_message.state == StagedMessage.states[:assigned]
              - event = staged_message.assigned_event
              - event_path = event.is_a?(MorbidityEvent) ? cmr_path(event) : contact_event_path(event)
              = link_to(t("staging_area_states.#{staged_message.state.downcase}"), event_path)
            - else
              = t("staging_area_states.#{staged_message.state.downcase}")
            &nbsp;&nbsp;
            %span.hoverable
              %b
                =t :staged_message_notes
                %span= h(staged_message.note || t("none"))
              = " | "
              %b
                =t 'raw'
                %span= h(staged_message.hl7_message)
