-# Copyright (C) 2007, 2008, 2009, 2010 The Collaborative Software Foundation
-#
-# This file is part of TriSano.
-#
-# TriSano is free software: you can redistribute it and/or modify it under the terms of the
-# GNU Affero General Public License as published by the Free Software Foundation, either
-# version 3 of the License, or (at your option) any later version.
-#
-# TriSano is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
-# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
-# See the GNU Affero General Public License for more details.
-#
-# You should have received a copy of the GNU Affero General Public License along with TriSano.
-# If not, see http://www.gnu.org/licenses/agpl-3.0.txt.

%fieldset.form
  %legend
    =t 'event_tasks'

  - urls_hash = sort_urls(task_owner)
  - tasks = task_owner.filter_tasks(params)
  - unless tasks.empty?
    #task-message{ :align => 'center' }
    %table#task-list.list
      %thead
        %tr
          %th= link_to_remote(t('due_date'),    :update => 'tasks', :method => :get, :url => urls_hash['due_date'])
          %th= link_to_remote(t('name'),             :update => 'tasks', :method => :get, :url => urls_hash['name'])
          - unless task_owner.is_a? Event
            %th= link_to_remote(t('disease'),        :update => 'tasks', :method => :get, :url => urls_hash['disease_name'])
          %th= link_to_remote(t('description'),      :update => 'tasks', :method => :get, :url => urls_hash['notes'])
          %th= link_to_remote(t('category'),         :update => 'tasks', :method => :get, :url => urls_hash['category_name'])
          %th= link_to_remote(t('priority'),         :update => 'tasks', :method => :get, :url => urls_hash['priority'])
          %th= link_to_remote(t('assigned_to'), :update => 'tasks', :method => :get, :url => urls_hash['user_name'])
          %th= link_to_remote(t('status'),           :update => 'tasks', :method => :get, :url => urls_hash['status'])
      %tbody
        - meth = params[:tasks_ordered_by]
        - unless meth.nil?
          - tasks = tasks.sort_by do |task|
            - (task.send(meth) || (meth.to_s == 'due_date' ? '9' : '')).to_s
        - for task in tasks
          - task_class = task.status.blank? ? "task" : "task-#{h(task.status.gsub("_", "-"))}"

          %tr{ :class => task_class }
            %td
              =ld(task.due_date)
            %td
              =task.name             ? h(task.name) : '&nbsp;'
            - unless task_owner.is_a? Event
              %td
                =task.disease_name   ? h(task.disease_name) : '&nbsp;'
            %td
              =task.notes            ? h(task.notes) : '&nbsp;'
            %td
              =task.category_name    ? h(task.category_name) : '&nbsp;'
            %td
              =!task.priority.blank? ? t(task.priority) : '&nbsp;'
            %td
              =task.user_name        ? h(task.user_name) : '&nbsp;'
            %td
              - if task_owner.is_a?(Event)
                = event_task_action_links(task)
              - else
                = user_task_action_links(task)

  - else
    %span=t 'no_tasks'
