# Copyright (C) 2007, 2008, The Collaborative Software Foundation
#
# This file is part of TriSano.
#
# TriSano is free software: you can redistribute it and/or modify it under the 
# terms of the GNU Affero General Public License as published by the 
# Free Software Foundation, either version 3 of the License, 
# or (at your option) any later version.
#
# TriSano is distributed in the hope that it will be useful, but 
# WITHOUT ANY WARRANTY; without even the implied warranty of 
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License 
# along with TriSano. If not, see http://www.gnu.org/licenses/agpl-3.0.txt.

require(File.join(File.dirname(__FILE__), 'config', 'boot'))

require 'rake'
require 'rake/testtask'
require 'rake/rdoctask'

require 'tasks/rails'

# Added for ci_reporter
require 'rubygems'
gem 'ci_reporter'
require 'ci/reporter/rake/rspec' # use for RSpec
require 'ci/reporter/rake/test_unit' # for Test::Unit
    
Rake::Task["db:structure:dump"].enhance {
  abcs = ActiveRecord::Base.configurations
  ENV['PGHOST']     = abcs[RAILS_ENV]["host"] if abcs[RAILS_ENV]["host"]
  ENV['PGPORT']     = abcs[RAILS_ENV]["port"].to_s if abcs[RAILS_ENV]["port"]
  ENV['PGPASSWORD'] = abcs[RAILS_ENV]["password"].to_s if abcs[RAILS_ENV]["password"]
  search_path = abcs[RAILS_ENV]["schema_search_path"]
  search_path = "--schema=#{search_path}" if search_path
  `pg_dump -i -U "#{abcs[RAILS_ENV]["username"]}" --data-only -x -O -f db/#{RAILS_ENV}_pg_ts_contents.sql #{search_path} #{abcs[RAILS_ENV]["database"]} --table=pg_ts_cfg --table=pg_ts_dict --table=pg_ts_parser --table=pg_ts_cfgmap`
  raise "Error dumping Postgres full text contents" if $?.exitstatus == 1
}

Rake::Task["db:test:clone_structure"].enhance {
  abcs = ActiveRecord::Base.configurations
  ENV['PGHOST']     = abcs["test"]["host"] if abcs["test"]["host"]
  ENV['PGPORT']     = abcs["test"]["port"].to_s if abcs["test"]["port"]
  ENV['PGPASSWORD'] = abcs["test"]["password"].to_s if abcs["test"]["password"]
  `psql -U "#{abcs["test"]["username"]}" -f db/#{RAILS_ENV}_pg_ts_contents.sql #{abcs["test"]["database"]}`
  
  # Rake::Task["trisano:dev:update_test_locale_config"].invoke
  `psql -U "#{abcs["test"]["username"]}" -c \"UPDATE pg_ts_cfg SET LOCALE = current_setting('lc_collate') WHERE ts_name = 'default'\" #{abcs["test"]["database"]}`
  
  raise "Error loading Postgres full text contents" if $?.exitstatus == 1
}

Rake::Task["db:create:all"].enhance {
  Rake::Task["trisano:dev:add_tsearch"].invoke
  Rake::Task["trisano:dev:update_locale_configs"].invoke
}

# The following could be a bit more dry/dynamic
Rake::Task["db:create"].enhance {
  case ENV['RAILS_ENV']
  when "development"
    Rake::Task["trisano:dev:add_tsearch_to_dev"].invoke
    Rake::Task["trisano:dev:update_dev_locale_config"].invoke
  when "test"
    Rake::Task["trisano:dev:add_tsearch_to_test"].invoke
    Rake::Task["trisano:dev:update_test_locale_config"].invoke
  else
    raise "tsearch not installed in this environment -- only dev and test supported"
  end
}

Rake::Task["db:test:prepare"].enhance {
  ruby "-S rake spec:db:fixtures:load FIXTURES=codes,external_codes RAILS_ENV=test"
}

