-# Copyright (C) 2007, 2008, The Collaborative Software Foundation
-#
-# This file is part of TriSano.
-#
-# TriSano is free software: you can redistribute it and/or modify it under the terms of the
-# GNU Affero General Public License as published by the Free Software Foundation, either 
-# version 3 of the License, or (at your option) any later version.
-#
-# TriSano is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
-# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
-# See the GNU Affero General Public License for more details.
-# 
-# You should have received a copy of the GNU Affero General Public License along with TriSano. 
-# If not, see http://www.gnu.org/licenses/agpl-3.0.txt.

- content_for :title do 
  Event Search

- form_tag(search_path + "/cmrs", :method => :get) do

  - if !flash[:error].blank?
    %span{ :style => "color:red" }= flash[:error]
  - unless @jurisdictions.nil?

    %fieldset{ :class => "horiz", :style => 'width: 100%;' }
      %legend By name
         
      %div{ :class => "horiz" }
        %label Full-text name
        = text_field_tag :name, params[:name], :size => "30", :class => "search"
        %br
        %small
          Uses Soundex and allows for first-/last-name transposition
      %div{ :class => "horiz" }
        %label Starts-with first name
        = text_field_tag :sw_first_name, params[:sw_first_name], :class => "search"
        %br
        %small
          Full-text search ignored when using starts-with search
      %div{ :class => "horiz" }
        %label Starts-with last name
        = text_field_tag :sw_last_name, params[:sw_last_name], :class => "search"

    %fieldset{ :class => "horiz", :style => 'width: 100%;' }
      %legend
        Additional criteria
      %div{ :class => "horiz" }
        %label Disease
        %select{ :name => "disease" }
          %option
          - for disease in @diseases
            %option{ :value => disease.id, :selected => disease.id == (params[:disease].to_i) ?  "selected" : nil}
              = "#{disease.disease_name}"
      %div{ :class => "horiz" }
        %label Gender
        %select{ :name => "gender" }
          %option
            - for gender in @genders
              %option{ :value => gender.id, :selected => gender.id == (params[:gender].to_i) ?  "selected" : nil}
                = "#{gender.code_description}"
      %div{ :class => "horiz" }
        %label Event Status
        %select{ :name => "event_status"}
          %option
          - for status in @event_statuses
            %option{ :value => status.state, :selected => status.state == (params[:event_status]) ? "selected" : nil}
              = "#{status.description}"
      %br{ :clear => "all" }
      %br
      %div{ :class => "horiz" }
        %label City
        = model_auto_completer("city", params[:city], "", "", { :allow_free_text => true}, { :size => 25 }, { :skip_style => false } )
      %div{ :class => "horiz" }
        %label County
        %select{ :name => "county"}
          %option
          - for county in @counties
            %option{ :value => county.id, :selected => county.id == (params[:county].to_i) ? "selected" : nil}
              = "#{county.code_description}"
      %div{ :class => "horiz" }
        %label Jurisdiction of Investigation
        %select{ :name => "jurisdiction_id"}
          %option
          - for jurisdiction in @jurisdictions
            %option{ :value => jurisdiction.entity_id, :selected => jurisdiction.entity_id == (params[:jurisdiction_id].to_i) ? "selected" : nil}
              = "#{jurisdiction.name}"
      %div{ :class => "horiz" }
        %label Event Type
        %select{ :name => "event_type"}
          %option
          - for event_type in @event_types
            %option{ :value => event_type[:value], :selected => event_type[:value] == (params[:event_type]) ? "selected" : nil}
              = "#{event_type[:name]}"
          
      %br{ :clear => "all" }
      %br
      %div{ :class => "horiz" }
        %label Date or year of birth
        = text_field_tag :birth_date, params[:birth_date], :size => "10"
        %small (mm/dd/yyyy, or yyyy)
      %div{ :class => "horiz" }
        %label Entered-on date range
        = text_field_tag :entered_on_start, params[:entered_on_start], :size => "10"
        &nbsp;-&nbsp;
        = text_field_tag :entered_on_end, params[:entered_on_end], :size => "10"
        %small (mm/dd/yyyy)
    %br{ :clear => "all" }
    %br
    %input{ :type => "submit" }

%br

- if !@cmrs.blank?
  %div{ :class => 'tools' }
    = link_to_function('Export All to CSV', nil) do |page|
      - page[:export_options].visual_effect :slide_down

  = render :partial => "morbidity_events/export_options", :locals => { :path => cmrs_format_path(params.merge(:format => 'csv')) }

  %table{:class => 'tabular'}
    %tr
      %th
        Record Number
      %th
        Name
      %th
        Age / Birth Date
      %th
        Gender
      %th
        Disease
      %th
        City
      %th
        County
      %th
        Jurisdiction
      %th
        Onset Date
      - for cmr in @cmrs
        - if cmr.class == MorbidityEvent
          - path = cmr_path(cmr.event_id)
          - html_id = "show-cmr-link-#{cmr.event_id}"
        - else
          - path = contact_event_path(cmr.event_id)
          - html_id = "show-contact-link-#{cmr.event_id}"

        %tr
          %td
            -# = link_to("#{person[:person].first_name} #{person[:person].last_name} (#{person[:event_type].to_s.underscore.humanize})", path, :id => html_id)
            = link_to("#{cmr.record_number}", path, :if => html_id)
            &nbsp;&nbsp;
            %small="(#{cmr.class.to_s.underscore.humanize})"
          %td
            = "#{cmr.first_name} #{cmr.last_name}"
          %td
            - if  !cmr.birth_date.blank?
              = "#{calculate_age cmr.birth_date.to_date} / #{cmr.birth_date}"
          %td
            = cmr.gender
          %td
            = cmr.disease_name
          %td
            = cmr.city
          %td
            = cmr.county
          %td
            = cmr.jurisdiction_name
          %td
            = cmr.event_onset_date

  - if User.current_user.is_entitled_to?(:create_event)
    = link_to("Start a CMR with the criteria that you searched on.", { :controller => "morbidity_events", :action => "new", :from_search => "", :first_name => @first_name, :middle_name => @middle_name, :last_name => @last_name, :disease => params[:disease], :gender => params[:gender], :city => params[:city], :county => params[:county], :jurisdiction_id => params[:jurisdiction_id], :birth_date => @birth_date }, {:id => "start_cmr"})

- if @cmrs.blank? && flash[:error].blank? && (!params[:name].blank? || !params[:sw_first_name].blank? || !params[:sw_last_name].blank?  || !params[:disease].blank? || !params[:gender].blank? || !params[:event_status].blank? || !params[:city].blank? || !params[:county].blank? || !params[:jurisdiction_id].blank? ||!params[:event_type].blank? || !params[:birth_date].blank? || !params[:entered_on_start].blank? || !params[:entered_on_end].blank?)

  %span
    Your search returned no results.

  %br
  %br

  / Move the query string building out to a helper, sniff out what isn't there so it's not so long
  - if User.current_user.is_entitled_to?(:create_event)
    = link_to("Start a CMR with the criteria that you searched on.", { :controller => "morbidity_events", :action => "new", :from_search => "", :first_name => @first_name, :middle_name => @middle_name, :last_name => @last_name, :disease => params[:disease], :gender => params[:gender], :city => params[:city], :county => params[:county], :jurisdiction_id => params[:jurisdiction_id], :birth_date => @birth_date }, {:id => "start_cmr"})

