-# Copyright (C) 2007, 2008, The Collaborative Software Foundation
-#
-# This file is part of TriSano.
-#
-# TriSano is free software: you can redistribute it and/or modify it under the terms of the
-# GNU Affero General Public License as published by the Free Software Foundation, either 
-# version 3 of the License, or (at your option) any later version.
-#
-# TriSano is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
-# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
-# See the GNU Affero General Public License for more details.
-# 
-# You should have received a copy of the GNU Affero General Public License along with TriSano. 
-# If not, see http://www.gnu.org/licenses/agpl-3.0.txt.


%div{:class => 'contact', :style => "clear: both;"}
  - new_or_existing = new_or_existing?(contact)
  - prefix = event_prefix_for_multi_models(new_or_existing, "_contact_attributes")
  - prefix_with_array = prefix + "[]"

  - contact_person = contact.secondary_entity.person_temp
  - contact_telephone_entities_location = contact.secondary_entity.telephone_entities_locations[0]

  -# Reading back a contact who was saved with no phone
  - if contact_telephone_entities_location.nil?
    - contact_telephone_entities_location = EntitiesLocation.new_telephone_location

  - contact_telephone = contact_telephone_entities_location.location.telephones.last

  = error_messages_for :object => [contact_person, contact_telephone]

  - fields_for(prefix_with_array, contact_person, :builder => ExtendedFormBuilder) do |contact_fields|

    %span.horiz
      = contact_fields.label(:last_name)
      = contact_fields.text_field(:last_name, :size => 20)
    %span.horiz
      = contact_fields.label(:first_name)
      = contact_fields.text_field(:first_name, :size => 20)
    %span.horiz
      = contact_fields.label(:disposition_id)
      = contact_fields.dropdown_code_field(:disposition_id, 'contactdispositiontype')

  %span.vert
  - contact_phone_id = contact_telephone_entities_location.id
  - contact_telephone_entities_location.id = contact_person.id

  - fields_for prefix_with_array, contact_telephone_entities_location, :builder => ExtendedFormBuilder do |el_form|
    = hidden_field_tag("#{prefix}[#{contact_telephone_entities_location.id}][contact_phone_id]", contact_phone_id) unless contact.new_record?
    - core_element :entity_location_type_id, el_form, :horiz do
      = el_form.label(:entity_location_type_id, "Phone type")
      = el_form.dropdown_code_field(:entity_location_type_id, 'telephonelocationtype', {}, {})

  - contact_telephone.id = contact_person.id

  - fields_for(prefix_with_array, contact_telephone, :builder => ExtendedFormBuilder) do |phone_fields|
    %span.horiz
      = phone_fields.label(:area_code)
      = phone_fields.core_text_field(:area_code, {:size => 3, :maxlength => 3, :class => 'autotab'})
    %span.horiz
      = phone_fields.label(:phone_number)
      = phone_fields.core_text_field(:phone_number, {:size => 8})
    %span.horiz
      = phone_fields.label(:extension)
      = phone_fields.core_text_field(:extension, {:size => 6})

    %span{:class => "horiz", :style => "margin-top: 30px"}
      = (link_to("Edit contact event", edit_contact_event_path(contact_person.entity.case_id), {:id => "edit-contact-event"}) + " | ") unless contact.new_record?
      = link_to_function "Remove" , "$(this).up('.contact').remove()", {:id => "remove_contact_link"}

    %hr
