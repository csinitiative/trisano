-# A lab can have new or existing (edited) lab results
- new_or_existing = new_or_existing?(lab_result)
- lab_result_prefix = "#{prefix}[#{new_or_existing}_lab_result_attributes]"
- lab_result_namespace = lab_result_prefix + "[]"
- auto_complete_prefix = lab_result_prefix + "[#{lab_result.id}]"

-# Extract the unique ID from the prefix, to make a unique class name for all lab_result children
- lab_id = prefix[/\[(\w+)\]$/, 1]

%div{:class => "lab_result #{lab_id}", :style => "clear: both; margin-left: 20px;"}
  = error_messages_for :object => lab_result

  - fields_for(lab_result_namespace, lab_result, :builder => ExtendedFormBuilder) do |lab_result_fields|

    -# Autocomplete for test type.
    = trisano_auto_complete("#{auto_complete_prefix}[test_type]", "test_type", lab_result, "test_type", "Test type", {:size => 20, :maxlength => 255}, {:url => {:controller => "events", :action => "auto_complete_for_test_type"}, :param_name => 'test_type' })

    %span{:class => "horiz"}
      = lab_result_fields.label(:test_detail, "Specify test detail")
      = lab_result_fields.text_field(:test_detail, :size => 20, :maxlength => 255)

    -# Autocomplete for lab result 
    = trisano_auto_complete("#{auto_complete_prefix}[lab_result_text]", "lab_result", lab_result, "lab_result_text", "Test result", {:size => 20, :maxlength => 255, :class => 'required_if_others'}, {:url => {:controller => "events", :action => "auto_complete_for_lab_result"}, :param_name => 'lab_result' })

    %span{:class => "horiz"}
      = lab_result_fields.label(:reference_range)
      = lab_result_fields.text_field(:reference_range, :size => 20, :maxlength => 255)
    %span{:class => "horiz"}
      = lab_result_fields.label(:interpretation)
      = lab_result_fields.dropdown_code_field(:interpretation_id, "lab_interpretation", {})
    %span.vert
    %span{:class => "horiz"}
      = lab_result_fields.label(:specimen_source_id, "Specimen source")
      = lab_result_fields.dropdown_code_field(:specimen_source_id, "specimen", {})
    %span{:class => "horiz"}
      = lab_result_fields.label(:collection_date)
      = lab_result_fields.calendar_date_select(:collection_date, :year_range => 5.years.ago..0.years.from_now)
    %span{:class => "horiz"}
      = lab_result_fields.label(:lab_test_date)
      = lab_result_fields.calendar_date_select(:lab_test_date, :year_range => 5.years.ago..0.years.from_now)
    %span{:class => "horiz"}
      = lab_result_fields.label(:specimen_sent_to_uphl_yn_id, "Specimen sent to UPHL?")
      = lab_result_fields.dropdown_code_field(:specimen_sent_to_uphl_yn_id, "yesno", {})
    %span{:style => "position: relative; top: 20px"}
      = link_to_function "Remove this result" , "if ($$('.#{lab_id}').size() == 1) {$(this).up('.lab').remove()} else {$(this).up('.#{lab_id}').remove()}", {:id => "remove_lab_result_link"}

    %hr{:style => "position: relative; top: 5px"}
