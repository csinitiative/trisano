-# Copyright (C) 2007, 2008, 2009 The Collaborative Software Foundation
-#
-# This file is part of TriSano.
-#
-# TriSano is free software: you can redistribute it and/or modify it under the
-# terms of the GNU Affero General Public License as published by the
-# Free Software Foundation, either version 3 of the License,
-# or (at your option) any later version.
-#
-# TriSano is distributed in the hope that it will be useful, but
-# WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU Affero General Public License for more details.
-#
-# You should have received a copy of the GNU Affero General Public License
-# along with TriSano. If not, see http://www.gnu.org/licenses/agpl-3.0.txt.

- agency_form = nil
- if f
  - agency_form = f
- else
  - fields_for("morbidity_event[reporting_agency_attributes]", reporting_agency) do |ra|
    - agency_form = ra

- reporting_agency = agency_form.object.place_entity.place

- if reporting_agency.new_record?
  - agency_form.fields_for(:place_entity, :builder => ExtendedFormBuilder) do |pe|
    - pe.fields_for(:place, :builder => ExtendedFormBuilder) do |p|
      = error_messages_for :object => reporting_agency
      - agency_type_ids = reporting_agency.new_record? ? [] : reporting_agency.reporting_agency_types.collect(&:code_id)

      - core_element :name, p, :horiz do
        = p.label(:name, "Reporting Agency Name")
        = p.text_field(:name, :size => 25, :class => 'required_if_others')

      - pe.fields_for(:telephones, :builder => ExtendedFormBuilder) do |phone_fields|
        - core_element :area_code, phone_fields, :horiz do
          = phone_fields.label(:area_code)
          = phone_fields.core_text_field(:area_code, {:size => 3, :maxlength => 3, :class => 'autotab'}, @event)
        - core_element :phone_number, phone_fields, :horiz do
          = phone_fields.label(:phone_number)
          = phone_fields.core_text_field(:phone_number, {:size => 8}, @event)
        - core_element :extension, phone_fields, :horiz do
          = phone_fields.label(:extension)
          = phone_fields.core_text_field(:extension, {:size => 6, :maxlength => 6}, @event)

      - core_element :agency_type, p, :vert do
        = p.label(:agency_types)
        %div{:style => 'width: 50em; border-left:1px solid #808080; border-top:1px solid #808080; border-bottom:1px solid #fff; border-right:1px solid #fff; overflow: auto;'}
          %div{:style => 'background:#fff; overflow:auto;height: 12em;border-left:1px solid #404040;border-top:1px solid #404040;border-bottom:1px solid #d4d0c8;border-right:1px solid #d4d0c8;'}
            - field_name = p.object_name + "[agency_type_ids][]"
            - Place.agency_types.each do |type|
              - field_id = (p.object_name. + "[agency_type][#{type.the_code}]").gsub(/[\[\]]/, "_")
              = "<label>" + check_box_tag(field_name, type.id, agency_type_ids.include?(type.id), :id => field_id ) + type.code_description + "</label>"
- else  
  - if agency_form.object.new_record?
    - # The user has added a new reporting agency from an existing place
  - else
    - # The event already has a saved reporting agency

  - core_element :name, agency_form, :horiz do
    = agency_form.hidden_field(:secondary_entity_id)
    = agency_form.label(:name, "Reporting Agency")
    = reporting_agency.name || "&nbsp;"
  - core_element :agency_type, agency_form, :horiz do
    = agency_form.label(:agency_types)
    = reporting_agency.agency_types_description.to_s + '&nbsp;'

  - unless agency_form.object.new_record?
    %span.horiz
      = agency_form.hidden_field(:id)
      = agency_form.label :_delete, "Remove"
      = agency_form.check_box :_delete
     
