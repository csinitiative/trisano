<Schema name="TriSano">
	<Cube name="MorbidityEvents" caption="Morbidity Events" cache="true" enabled="true">
		<Table name="dw_morbidity_events_view" schema="trisano">
		</Table>
		<Dimension type="StandardDimension" foreignKey="date_disease_diagnosed" name="Disease diagnosis date">
			<Hierarchy name="Date" hasAll="true" primaryKey="fulldate">
				<Table name="dw_date_dimension_view" schema="trisano"></Table>
				<Level name="Year" column="year" type="Integer" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"></Level>
				<Level name="Month" column="month" type="Integer" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"></Level>
				<Level name="Day" column="day_of_month" type="Integer" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"></Level>
			</Hierarchy>
		</Dimension>
		<Dimension type="StandardDimension" foreignKey="date_disease_onset" name="Disease onset date">
			<Hierarchy name="Date" hasAll="true" primaryKey="fulldate">
				<Table name="dw_date_dimension_view" schema="trisano"></Table>
				<Level name="Year" column="year" type="Integer" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"></Level>
				<Level name="Month" column="month" type="Integer" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"></Level>
				<Level name="Day" column="day_of_month" type="Integer" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"></Level>
			</Hierarchy>
		</Dimension>
        <Dimension type="StandardDimension" name="Investigating Jurisdiction" foreignKey="investigating_jurisdiction_id">
            <Hierarchy hasAll="true" primaryKey="id">
                <Table name="dw_morbidity_jurisdictions_view" schema="trisano"></Table>
                <Level name="Investigating Jurisdiction" column="name" type="String" uniqueMembers="true"></Level>
            </Hierarchy>
        </Dimension>
        <Dimension type="StandardDimension" foreignKey="disease_id" name="Disease">
            <Hierarchy name="Disease" hasAll="true" primaryKey="id">
                <Table name="diseases_view" schema="trisano"></Table>
                <Level name="Disease" column="disease_name" type="String" uniqueMembers="true"></Level>
            </Hierarchy>
        </Dimension>
        <Dimension type="StandardDimension" name="Is age known?">
            <Hierarchy hasAll="true">
                <Level type="Boolean" name="Is age known?">
                    <KeyExpression><SQL dialect="postgres">trisano.get_age_in_years(actual_age_at_onset, actual_age_type) IS NOT NULL</SQL></KeyExpression>
                </Level>
            </Hierarchy>
        </Dimension>
        <Dimension type="StandardDimension" name="Race" foreignKey="dw_patients_id">
            <Hierarchy hasAll="true" primaryKey="id" primaryKeyTable="dw_morbidity_patients_view">
                <Join leftKey="id" rightAlias="dw_morbidity_patients_races_view" rightKey="person_id">
                    <Table name="dw_morbidity_patients_view" schema="trisano" />
                    <Table name="dw_morbidity_patients_races_view" schema="trisano" />
                </Join>
                <Level name="Race" column="race" type="String" uniqueMembers="true" table="dw_morbidity_patients_races_view" />
            </Hierarchy>
        </Dimension>
		<Measure name="Count" datatype="Integer" aggregator="count" visible="true" column="id"></Measure>
		<Measure name="Pregnant" datatype="Integer" aggregator="sum" visible="true">
            <MeasureExpression>
                <SQL dialect="postgres">CASE WHEN pregnant = 'Yes' THEN 1 ELSE 0 END</SQL>
            </MeasureExpression>
        </Measure>
		<Measure name="Group living" datatype="Integer" aggregator="sum" visible="true">
            <MeasureExpression>
                <SQL dialect="postgres">CASE WHEN group_living = 'Yes' THEN 1 ELSE 0 END</SQL>
            </MeasureExpression>
        </Measure>
		<Measure name="Day care association" datatype="Integer" aggregator="sum" visible="true">
            <MeasureExpression>
                <SQL dialect="postgres">CASE WHEN day_care_association = 'Yes' THEN 1 ELSE 0 END</SQL>
            </MeasureExpression>
        </Measure>
		<Measure name="Healthcare worker" datatype="Integer" aggregator="sum" visible="true">
            <MeasureExpression>
                <SQL dialect="postgres">CASE WHEN healthcare_worker = 'Yes' THEN 1 ELSE 0 END</SQL>
            </MeasureExpression>
        </Measure>
		<Measure name="Food handler" datatype="Integer" aggregator="sum" visible="true">
            <MeasureExpression>
                <SQL dialect="postgres">CASE WHEN food_handler = 'Yes' THEN 1 ELSE 0 END</SQL>
            </MeasureExpression>
        </Measure>
        <Measure name="Min Days From Onset to Diagnosis" aggregator="min" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_disease_diagnosed - date_disease_onset)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure name="Max Days From Onset to Diagnosis" aggregator="max" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_disease_diagnosed - date_disease_onset)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure name="Avg Days From Onset to Diagnosis" aggregator="avg" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_disease_diagnosed - date_disease_onset)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure name="Min Days From Onset to Report" aggregator="min" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_reported_to_public_health - date_disease_onset)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure name="Max Days From Onset to Report" aggregator="max" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_reported_to_public_health - date_disease_onset)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure name="Avg Days From Onset to Report" aggregator="avg" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_reported_to_public_health - date_disease_onset)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure name="Min Days From Onset to Investigation Start" aggregator="min" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_investigation_started - date_disease_onset)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure name="Max Days From Onset to Investigation Start" aggregator="max" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_investigation_started - date_disease_onset)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure name="Avg Days From Onset to Investigation Start" aggregator="avg" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_investigation_started - date_disease_onset)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure name="Min Days From Onset to Investigation End" aggregator="min" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_investigation_completed - date_disease_onset)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure name="Max Days From Onset to Investigation End" aggregator="max" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_investigation_completed - date_disease_onset)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure name="Avg Days From Onset to Investigation End" aggregator="avg" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_investigation_completed - date_disease_onset)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure caption="Min Length (days) of Investigation" name="MinInvLength" aggregator="min" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_investigation_completed - date_investigation_started)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure caption="Max Length (days) of Investigation" name="MaxInvLength" aggregator="max" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_investigation_completed - date_investigation_started)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure caption="Avg Length (days) of Investigation" name="AvgInvLength" aggregator="avg" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_investigation_completed - date_investigation_started)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure caption="Min Age at Onset (years)" name="MinAgeAtOnset" aggregator="min" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(trisano.get_age_in_years(actual_age_at_onset, actual_age_type))</SQL>
            </MeasureExpression>
        </Measure>
        <Measure caption="Max Age at Onset (years)" name="MaxAgeAtOnset" aggregator="max" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(trisano.get_age_in_years(actual_age_at_onset, actual_age_type))</SQL>
            </MeasureExpression>
        </Measure>
        <Measure caption="Avg Age at Onset (years)" name="AvgAgeAtOnset" column="age_in_years" aggregator="avg" datatype="Integer" visible="True"> </Measure>
		<Measure name="Once a contact" datatype="Integer" aggregator="count" visible="false">
            <MeasureExpression>
                <SQL dialect="postgres">CASE WHEN parent_id IS NOT NULL THEN 1 ELSE 0 END</SQL>
            </MeasureExpression>
        </Measure>
        <Measure name="StdevAgeAtOnset" caption="Age at Onset (years), Std. Dev" visible="true" aggregator="count" datatype="Numeric">
            <MeasureExpression>
                <SQL dialect="postgres">trisano.make_numcust(stddev(trisano.get_age_in_years(actual_age_at_onset, actual_age_type)))</SQL>
            </MeasureExpression>
        </Measure>
        <CalculatedMember name="Population" formula="GetPopulation([Count])" dimension="Measures" visible="true" />
        <CalculatedMember name="Rate" formula="[Count] / GetPopulation([Count])" dimension="Measures" visible="true" />
        <!--
        <CalculatedMember name="NullAges" caption="Null Ages" formula="Count(Filter({[Measures].[AgeAtOnset]}, NOT ([Measures].[AgeAtOnset] IS NULL)))" dimension="Measures" visible="true" />
        <CalculatedMember name="Age at Onset (years), Std Dev" formula="Stdev({[Measures].[AvgAgeAtOnset]})" dimension="Measures" formatString="###.00" visible="true" />
        -->

	</Cube>
	<Cube name="ContactEvents" caption="Contact Events" cache="true" enabled="true">
		<Table name="dw_contact_events_view" schema="trisano">
		</Table>
		<Dimension type="StandardDimension" foreignKey="date_disease_diagnosed" name="Disease diagnosis date">
			<Hierarchy name="Date" hasAll="true" primaryKey="fulldate">
				<Table name="dw_date_dimension_view" schema="trisano"></Table>
				<Level name="Year" column="year" type="Integer" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"></Level>
				<Level name="Month" column="month" type="Integer" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"></Level>
				<Level name="Day" column="day_of_month" type="Integer" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"></Level>
			</Hierarchy>
		</Dimension>
		<Dimension type="StandardDimension" foreignKey="date_disease_onset" name="Disease onset date">
			<Hierarchy name="Date" hasAll="true" primaryKey="fulldate">
				<Table name="dw_date_dimension_view" schema="trisano"></Table>
				<Level name="Year" column="year" type="Integer" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"></Level>
				<Level name="Month" column="month" type="Integer" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"></Level>
				<Level name="Day" column="day_of_month" type="Integer" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"></Level>
			</Hierarchy>
		</Dimension>
        <Dimension type="StandardDimension" name="Investigating Jurisdiction" foreignKey="investigating_jurisdiction_id">
            <Hierarchy hasAll="true" primaryKey="id">
                <Table name="dw_contact_jurisdictions_view" schema="trisano"></Table>
                <Level name="Investigating Jurisdiction" column="name" type="String" uniqueMembers="true"></Level>
            </Hierarchy>
        </Dimension>
        <Dimension type="StandardDimension" foreignKey="disease_id" name="Disease">
            <Hierarchy name="Disease" hasAll="true" primaryKey="id">
                <Table name="diseases_view" schema="trisano"></Table>
                <Level name="Disease" column="disease_name" type="String" uniqueMembers="true"></Level>
            </Hierarchy>
        </Dimension>
        <Dimension type="StandardDimension" name="Is age known?">
            <Hierarchy hasAll="true">
                <Level type="Boolean" name="Is age known?">
                    <KeyExpression><SQL dialect="postgres">trisano.get_age_in_years(actual_age_at_onset, actual_age_type) IS NOT NULL</SQL></KeyExpression>
                </Level>
            </Hierarchy>
        </Dimension>
        <Dimension type="StandardDimension" name="Race" foreignKey="dw_patients_id">
            <Hierarchy hasAll="true" primaryKey="id" primaryKeyTable="dw_contact_patients_view">
                <Join leftKey="id" rightAlias="dw_contact_patients_races_view" rightKey="person_id">
                    <Table name="dw_contact_patients_view" schema="trisano" />
                    <Table name="dw_contact_patients_races_view" schema="trisano" />
                </Join>
                <Level name="Race" column="race" type="String" uniqueMembers="true" table="dw_contact_patients_races_view" />
            </Hierarchy>
        </Dimension>
		<Measure name="Count" datatype="Integer" aggregator="count" visible="true">
            <MeasureExpression><SQL dialect="postgres">1</SQL></MeasureExpression>
        </Measure>
		<Measure name="Pregnant" datatype="Integer" aggregator="sum" visible="true">
            <MeasureExpression>
                <SQL dialect="postgres">CASE WHEN pregnant = 'Yes' THEN 1 ELSE 0 END</SQL>
            </MeasureExpression>
        </Measure>
		<Measure name="Group living" datatype="Integer" aggregator="sum" visible="true">
            <MeasureExpression>
                <SQL dialect="postgres">CASE WHEN group_living = 'Yes' THEN 1 ELSE 0 END</SQL>
            </MeasureExpression>
        </Measure>
		<Measure name="Day care association" datatype="Integer" aggregator="sum" visible="true">
            <MeasureExpression>
                <SQL dialect="postgres">CASE WHEN day_care_association = 'Yes' THEN 1 ELSE 0 END</SQL>
            </MeasureExpression>
        </Measure>
		<Measure name="Healthcare worker" datatype="Integer" aggregator="sum" visible="true">
            <MeasureExpression>
                <SQL dialect="postgres">CASE WHEN healthcare_worker = 'Yes' THEN 1 ELSE 0 END</SQL>
            </MeasureExpression>
        </Measure>
		<Measure name="Food handler" datatype="Integer" aggregator="sum" visible="true">
            <MeasureExpression>
                <SQL dialect="postgres">CASE WHEN food_handler = 'Yes' THEN 1 ELSE 0 END</SQL>
            </MeasureExpression>
        </Measure>
        <Measure name="Min Days From Onset to Diagnosis" aggregator="min" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_disease_diagnosed - date_disease_onset)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure name="Max Days From Onset to Diagnosis" aggregator="max" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_disease_diagnosed - date_disease_onset)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure name="Avg Days From Onset to Diagnosis" aggregator="avg" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_disease_diagnosed - date_disease_onset)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure name="Min Days From Onset to Report" aggregator="min" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_reported_to_public_health - date_disease_onset)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure name="Max Days From Onset to Report" aggregator="max" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_reported_to_public_health - date_disease_onset)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure name="Avg Days From Onset to Report" aggregator="avg" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_reported_to_public_health - date_disease_onset)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure name="Min Days From Onset to Investigation Start" aggregator="min" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_investigation_started - date_disease_onset)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure name="Max Days From Onset to Investigation Start" aggregator="max" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_investigation_started - date_disease_onset)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure name="Avg Days From Onset to Investigation Start" aggregator="avg" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_investigation_started - date_disease_onset)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure name="Min Days From Onset to Investigation End" aggregator="min" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_investigation_completed - date_disease_onset)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure name="Max Days From Onset to Investigation End" aggregator="max" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_investigation_completed - date_disease_onset)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure name="Avg Days From Onset to Investigation End" aggregator="avg" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_investigation_completed - date_disease_onset)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure caption="Min Length (days) of Investigation" name="MinInvLength" aggregator="min" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_investigation_completed - date_investigation_started)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure caption="Max Length (days) of Investigation" name="MaxInvLength" aggregator="max" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_investigation_completed - date_investigation_started)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure caption="Avg Length (days) of Investigation" name="AvgInvLength" aggregator="avg" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(date_investigation_completed - date_investigation_started)</SQL>
            </MeasureExpression>
        </Measure>
        <Measure caption="Min Age at Onset (years)" name="MinAgeAtOnset" aggregator="min" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(trisano.get_age_in_years(actual_age_at_onset, actual_age_type))</SQL>
            </MeasureExpression>
        </Measure>
        <Measure caption="Max Age at Onset (years)" name="MaxAgeAtOnset" aggregator="max" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(trisano.get_age_in_years(actual_age_at_onset, actual_age_type))</SQL>
            </MeasureExpression>
        </Measure>
        <Measure caption="Avg Age at Onset (years)" name="AvgAgeAtOnset" aggregator="avg" visible="true" datatype="Integer">
            <MeasureExpression>
                <SQL dialect="postgres">(trisano.get_age_in_years(actual_age_at_onset, actual_age_type))</SQL>
            </MeasureExpression>
        </Measure>
        <Measure name="SqAgeAtOnset" visible="false" aggregator="avg">
            <MeasureExpression>
                <SQL dialect="postgres">trisano.get_age_in_years(actual_age_at_onset, actual_age_type)^2</SQL>
            </MeasureExpression>
        </Measure>
        <Measure name="StdevAgeAtOnset" caption="Age at Onset (years), Std. Dev" visible="true" aggregator="count" datatype="Numeric">
            <MeasureExpression>
                <SQL dialect="postgres">trisano.make_numcust(stddev(trisano.get_age_in_years(actual_age_at_onset, actual_age_type)))</SQL>
            </MeasureExpression>
        </Measure>
	</Cube>
    <UserDefinedFunction name="GetPopulation" className="org.trisano.mondrian.GetPopulation" />
    <!--
    -->
</Schema>
