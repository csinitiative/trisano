require 'rubygems'
require 'selenium'
require 'test/unit'

class CMRRecordIDLogic < Test::Unit::TestCase
  
  NEDSS_URL = ENV['NEDSS_URL'] ||= 'http://utah:arches@ut-nedss-dev.csinitiative.com'
  
  def setup
    @verification_errors = []
    if $selenium
      @selenium = $selenium
    else
      @selenium = Selenium::SeleneseInterpreter.new("localhost", 4444, "*firefox", NEDSS_URL, 10000);
      @selenium.start
    end
    @selenium.set_context("test_c_m_r_record_i_d_logic")
  end
  
  def teardown
    @selenium.stop unless $selenium
    assert_equal [], @verification_errors
  end
  
  def test_c_m_r_record_i_d_logic
    @selenium.open "/nedss/"
    @selenium.click "link=New CMR"
    @selenium.wait_for_page_to_load "30000"
    @selenium.type "event_active_patient__active_primary_entity__person_last_name", "Record"
    @selenium.type "event_active_patient__active_primary_entity__person_first_name", "Number"
    @selenium.type "event_active_patient__active_primary_entity__person_middle_name", "Test"
    @selenium.click "event_submit"
    @selenium.wait_for_page_to_load "30000"
    recNum = @selenium.get_text("//div[2]/fieldset/table/tbody/tr[1]/td[2]")
    @selenium.click "link=New CMR"
    @selenium.wait_for_page_to_load "30000"
    @selenium.type "event_active_patient__active_primary_entity__person_last_name", "Next"
    @selenium.type "event_active_patient__active_primary_entity__person_first_name", "Record"
    @selenium.click "event_submit"
    @selenium.wait_for_page_to_load "30000"
    @selenium.click "//li[2]/a/em"
    nextRecNum = @selenium.get_text("//div[2]/fieldset/table/tbody/tr[1]/td[2]")
    assert_equal "1", @selenium.get_eval(nextRecNum + "-" + recNum)
    # Code generated by Selenium is commented out and replaced with Ruby code because it doesn't work
    # for some reason the stored variables don't end up in selenium this way...
    # assert_equal "true", @selenium.get_eval("storedVars['recNum'].substr(0,4)==new Date().getFullYear()")
    # assert_equal "true", @selenium.get_eval("storedVars['nextRecNum'].substr(0,4)==new Date().getFullYear()")
    assert_equal true, recNum[0,4]==Time.now.year.to_s
    assert_equal true, nextRecNum[0,4]==Time.now.year.to_s
  end
end
