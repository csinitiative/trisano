-# Default group
- if direction == :to_library
  - q_string = link_to_remote("No Group", :update => "library-element-list-#{@reference_element_id}", :complete => visual_effect(:highlight, "library-element-list-#{@reference_element_id}"), :url => {:controller => "forms", :action => "to_library", :group_element_id => "root", :reference_element_id => @reference_element_id})
- else
  - q_string = "No Group"

%li{:id => "lib_group_item_root", :class => "lib-question-item"}=q_string

-# Questions not in a group (de facto children of "no group")
%ul
  - for form_element in @library_elements
    - next if form_element.is_a? GroupElement

    - if direction == :to_library
      - q_string = form_element.question.question_text
    -else
      - q_string = link_to_remote(form_element.question.question_text, :update => "root-element-list", :complete => visual_effect(:highlight, 'root-element-list'), :url => {:controller => "forms", :action => "from_library", :reference_element_id => @reference_element_id, :lib_element_id => form_element.id})

    - q_string += "&nbsp;&nbsp;<small>" + form_element.question.data_type_before_type_cast.humanize + "</small>"
    - form_element.pre_order_walk do |element|
      - q_string += "<br />&nbsp;&nbsp;<em><small>Value Set:&nbsp;&nbsp;" + element.name + "</small></em>: " if element.is_a? ValueSetElement
      - q_string += fml("<em><small>", element.name, "</small></em>&nbsp;&nbsp;") if element.is_a? ValueElement

    %li{:id => "lib_question_item_#{form_element.id}", :class => "lib-question-item"}=q_string
  
-# All real groups
- for form_element in @library_elements
  - next if form_element.is_a? QuestionElement

  - if direction == :to_library
    - q_string = link_to_remote("Click to add question to group: #{form_element.name}", :update => "library-element-list-#{@reference_element_id}", :complete => visual_effect(:highlight, "library-element-list-#{@reference_element_id}"), :url => {:controller => "forms", :action => "to_library", :group_element_id => form_element.id, :reference_element_id => @reference_element_id})
  - else
    - q_string = link_to_remote("Click to add all questions in group: #{form_element.name}", :update => "root-element-list", :complete => visual_effect(:highlight, 'root-element-list'), :url => {:controller => "forms", :action => "from_library", :reference_element_id => @reference_element_id, :lib_element_id => form_element.id})
  %li{:id => "lib_group_item_#{form_element.id}", :class => "lib-question-item"}=q_string

  -# children of this group, i.e. questions
  %ul
    - for form_element in form_element.children

      - if direction == :to_library
        - q_string = form_element.question.question_text
      -else
        - q_string = link_to_remote(form_element.question.question_text, :update => "root-element-list", :complete => visual_effect(:highlight, 'root-element-list'), :url => {:controller => "forms", :action => "from_library", :reference_element_id => @reference_element_id, :lib_element_id => form_element.id})

      - q_string += "&nbsp;&nbsp;<small>" + form_element.question.data_type_before_type_cast.humanize + "</small>"
      - form_element.pre_order_walk do |element|
        - q_string += "<br />&nbsp;&nbsp;<em><small>Value Set:&nbsp;&nbsp;" + element.name + "</small></em>: " if element.is_a? ValueSetElement
        - q_string += fml("<em><small>", element.name, "</small></em>&nbsp;&nbsp;") if element.is_a? ValueElement

      %li{:id => "lib_question_item_#{form_element.id}", :class => "lib-question-item"}=q_string
