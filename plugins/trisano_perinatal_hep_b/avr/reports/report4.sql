-- Report 4
-- Hep b pregnancy event program report
-- Query 1
SELECT
--    start_date, end_date, total,
--    active, trisano.no_error_div(active, total * 100) AS active_perc,
--    completed, trisano.no_error_div(completed, total * 100) AS completed_perc,
--    provider_refusal, trisano.no_error_div(provider_refusal, total * 100) AS provider_refusal_perc,
--    mother_fam_refusal, trisano.no_error_div(mother_fam_refusal, total * 100) AS mother_fam_refusal_perc,
--    moved, trisano.no_error_div(moved, total * 100) AS moved_perc,
--    unable_locate, trisano.no_error_div(unable_locate, total * 100) AS unable_locate_perc,
--    infant_died, trisano.no_error_div(infant_died, total * 100) AS infant_died_perc,
--    infant_adopted, trisano.no_error_div(infant_adopted, total * 100) AS infant_adopted_perc,
--    false_pos, trisano.no_error_div(false_pos, total * 100) AS false_pos_perc,
--    miscarriage, trisano.no_error_div(miscarriage, total * 100) AS miscarriage_perc,
--    other, trisano.no_error_div(other, total * 100) AS other_perc,
--
--    both_24, trisano.no_error_div(both_24, total * 100) AS both_24_perc,
--    dose1_24, trisano.no_error_div(dose1_24, total * 100) AS dose1_24_perc,
--    hbig_24, trisano.no_error_div(hbig_24, total * 100) AS hbig_24_perc,
--    neither_24, trisano.no_error_div(neither_24, total * 100) AS neither_24_perc,
--    both_48, trisano.no_error_div(both_48, total * 100) AS both_48_perc,
--    dose1_48, trisano.no_error_div(dose1_48, total * 100) AS dose1_48_perc,
--    hbig_48, trisano.no_error_div(hbig_48, total * 100) AS hbig_48_perc,
--    neither_48, trisano.no_error_div(neither_48, total * 100) AS neither_48_perc,
--    both_7d, trisano.no_error_div(both_7d, total * 100) AS both_7d_perc,
--    dose1_7d, trisano.no_error_div(dose1_7d, total * 100) AS dose1_7d_perc,
--    hbig_7d, trisano.no_error_div(hbig_7d, total * 100) AS hbig_7d_perc,
--    neither_7d, trisano.no_error_div(neither_7d, total * 100) AS neither_7d_perc,
--    both_2m, trisano.no_error_div(both_2m, total * 100) AS both_2m_perc,
--    dose1_2m, trisano.no_error_div(dose1_2m, total * 100) AS dose1_2m_perc,
--    hbig_2m, trisano.no_error_div(hbig_2m, total * 100) AS hbig_2m_perc,
--    neither_2m, trisano.no_error_div(neither_2m, total * 100) AS neither_2m_perc,
--    both_8m, trisano.no_error_div(both_8m, total * 100) AS both_8m_perc,
--    dose1_8m, trisano.no_error_div(dose1_8m, total * 100) AS dose1_8m_perc,
--    hbig_8m, trisano.no_error_div(hbig_8m, total * 100) AS hbig_8m_perc,
--    neither_8m, trisano.no_error_div(neither_8m, total * 100) AS neither_8m_perc,
--    both_12m, trisano.no_error_div(both_12m, total * 100) AS both_12m_perc,
--    dose1_12m, trisano.no_error_div(dose1_12m, total * 100) AS dose1_12m_perc,
--    hbig_12m, trisano.no_error_div(hbig_12m, total * 100) AS hbig_12m_perc,
--    neither_12m, trisano.no_error_div(neither_12m, total * 100) AS neither_12m_perc,
--    four_dose, trisano.no_error_div(four_dose, total * 100) AS four_dose_perc,
--    five_dose, trisano.no_error_div(five_dose, total * 100) AS five_dose_perc,
--    six_dose, trisano.no_error_div(six_dose, total * 100) AS six_dose_perc,
--    serotest_12m, trisano.no_error_div(serotest_12m, total * 100) AS serotest_12m_perc,
--    serotest_15m, trisano.no_error_div(serotest_15m, total * 100) AS serotest_15m_perc,
--    total_serotest, trisano.no_error_div(total_serotest, total * 100) AS total_serotest_perc,
--    positive_antihb, trisano.no_error_div(positive_antihb, total * 100) AS positive_antihb_perc,
--    positive_hbsag, trisano.no_error_div(positive_hbsag, total * 100) AS positive_hbsag_perc,
--    received_comvax, trisano.no_error_div(received_comvax, total * 100) AS received_comvax_perc,
--    total_hs,
--    active_hs, trisano.no_error_div(active_hs, total_hs * 100) AS active_hs_perc,
--    completed_hs, trisano.no_error_div(completed_hs, total_hs * 100) AS completed_hs_perc,
--    provider_refusal_hs, trisano.no_error_div(provider_refusal_hs, total_hs * 100) AS provider_refusal_hs_perc,
--    refused_treatment_hs, trisano.no_error_div(refused_treatment_hs, total_hs * 100) AS refused_treatment_hs_perc,
--    moved_hs, trisano.no_error_div(moved_hs, total_hs * 100) AS moved_hs_perc,
--    unable_to_locate_hs, trisano.no_error_div(unable_to_locate_hs, total_hs * 100) AS unable_to_locate_hs_perc,
--    died_hs, trisano.no_error_div(died_hs, total_hs * 100) AS died_hs_perc,
--    false_positive_hs, trisano.no_error_div(false_positive_hs, total_hs * 100) AS false_positive_hs_perc,
--    other_hs, trisano.no_error_div(other_hs, total_hs * 100) AS other_hs_perc,
--    total_hs_tested, trisano.no_error_div(total_hs_tested, total_hs * 100) AS total_hs_tested_perc,
--    hbsag_pos_hs, trisano.no_error_div(hbsag_pos_hs, total_hs * 100) AS hbsag_pos_hs_perc,
--    antihb_pos_hs, trisano.no_error_div(antihb_pos_hs, total_hs * 100) AS antihb_pos_hs_perc,
--    dose1_hs, trisano.no_error_div(dose1_hs, total_hs * 100) AS dose1_hs_perc,
--    dose2_hs, trisano.no_error_div(dose2_hs, total_hs * 100) AS dose2_hs_perc,
--    dose3_hs, trisano.no_error_div(dose3_hs, total_hs * 100) AS dose3_hs_perc,
--    dose1_hbig_trans, trisano.no_error_div(dose1_hbig_trans, moved * 100) AS dose1_hbig_trans_perc,
--    hbig_trans, trisano.no_error_div(hbig_trans, moved * 100) AS hbig_trans_perc,
--    dose1_trans, trisano.no_error_div(dose1_trans, moved * 100) AS dose1_trans_perc,
--    neither_trans, trisano.no_error_div(neither_trans, moved * 100) AS neither_trans_perc,
--    all_8m_trans, trisano.no_error_div(all_8m_trans, moved * 100) AS all_8m_trans_perc,
--    all_12m_trans, trisano.no_error_div(all_12m_trans, moved * 100) AS all_12m_tran_perc
--FROM (
--    SELECT
        trisano.make_date('${START_DATE}'::TEXT, CURRENT_DATE) AS start_date,
        trisano.make_date('${END_DATE}'::TEXT, CURRENT_DATE) AS end_date,
        COUNT(*) AS total,
        COUNT(CASE WHEN contact_type = 'infant' AND disposition IS NULL THEN 1 ELSE NULL END) AS active,
        COUNT(CASE WHEN contact_type = 'infant' AND disposition = 'completed' THEN 1 ELSE NULL END) AS completed,
        COUNT(CASE WHEN contact_type = 'infant' AND disposition = 'provider refusal' THEN 1 ELSE NULL END) AS provider_refusal,
        COUNT(CASE WHEN contact_type = 'infant' AND disposition = 'Mother/family refusal' THEN 1 ELSE NULL END) AS mother_fam_refusal,
        COUNT(CASE WHEN contact_type = 'infant' AND disposition = 'Moved' THEN 1 ELSE NULL END) AS moved,
        COUNT(CASE WHEN contact_type = 'infant' AND disposition = 'Unable to locate' THEN 1 ELSE NULL END) AS unable_locate,
        COUNT(CASE WHEN contact_type = 'infant' AND disposition = 'Died' THEN 1 ELSE NULL END) AS infant_died,
        COUNT(CASE WHEN contact_type = 'infant' AND disposition = 'Adopted' THEN 1 ELSE NULL END) AS infant_adopted,
        COUNT(CASE WHEN contact_type = 'infant' AND disposition = 'False positive mother/case' THEN 1 ELSE NULL END) AS false_pos,
        COUNT(CASE WHEN contact_type = 'infant' AND disposition = 'Miscarriage or termination' THEN 1 ELSE NULL END) AS miscarriage,
        COUNT(CASE WHEN contact_type = 'infant' AND disposition = 'Other' THEN 1 ELSE NULL END) AS other,
        COUNT(CASE WHEN contact_type = 'infant' AND hepb_dose1_date <= dce.birth_date + interval '1 day' AND hbig_vacc_date <= dce.birth_date + INTERVAL '1 day' THEN 1 ELSE NULL END) AS both_24,
        COUNT(CASE WHEN contact_type = 'infant' AND hepb_dose1_date <= dce.birth_date + interval '1 day' THEN 1 ELSE NULL END) AS dose1_24,
        COUNT(CASE WHEN contact_type = 'infant' AND hbig_vacc_date <= dce.birth_date + INTERVAL '1 day' THEN 1 ELSE NULL END) AS hbig_24,
        COUNT(CASE WHEN contact_type = 'infant' AND hepb_dose1_date IS NULL AND (hbig_vacc_date > dce.birth_date + INTERVAL '1 day' OR hbig_vacc_date IS NULL) THEN 1 ELSE NULL END) AS neither_24,
        COUNT(CASE WHEN contact_type = 'infant' AND hepb_dose1_date <= dce.birth_date + interval '2 days' AND hbig_vacc_date <= dce.birth_date + INTERVAL '2 days' THEN 1 ELSE NULL END) AS both_48,
        COUNT(CASE WHEN contact_type = 'infant' AND hepb_dose1_date <= dce.birth_date + interval '2 days' THEN 1 ELSE NULL END) AS dose1_48,
        COUNT(CASE WHEN contact_type = 'infant' AND hbig_vacc_date <= dce.birth_date + interval '2 days' THEN 1 ELSE NULL END) AS hbig_48,
        COUNT(CASE WHEN contact_type = 'infant' AND hepb_dose1_date IS NULL AND (hbig_vacc_date > dce.birth_date + INTERVAL '2 days' OR hbig_vacc_date IS NULL) THEN 1 ELSE NULL END) AS neither_48,
        COUNT(CASE WHEN contact_type = 'infant' AND hepb_dose1_date <= dce.birth_date + interval '7 days' AND hbig_vacc_date <= dce.birth_date + INTERVAL '7 days' THEN 1 ELSE NULL END) AS both_7d,
        COUNT(CASE WHEN contact_type = 'infant' AND hepb_dose1_date <= dce.birth_date + interval '7 days' THEN 1 ELSE NULL END) AS dose1_7d,
        COUNT(CASE WHEN contact_type = 'infant' AND hbig_vacc_date <= dce.birth_date + interval '7 days' THEN 1 ELSE NULL END) AS hbig_7d,
        COUNT(CASE WHEN contact_type = 'infant' AND hepb_dose1_date IS NULL AND (hbig_vacc_date > dce.birth_date + INTERVAL '7 days' OR hbig_vacc_date IS NULL) THEN 1 ELSE NULL END) AS neither_7d,
        COUNT(CASE WHEN contact_type = 'infant' AND hepb_dose1_date <= dce.birth_date + interval '2 months' AND hbig_vacc_date <= dce.birth_date + INTERVAL '7 days' THEN 1 ELSE NULL END) AS both_2m,
        COUNT(CASE WHEN contact_type = 'infant' AND hepb_dose1_date <= dce.birth_date + interval '2 months' THEN 1 ELSE NULL END) AS dose1_2m,
        COUNT(CASE WHEN contact_type = 'infant' AND hbig_vacc_date <= dce.birth_date + interval '2 months' THEN 1 ELSE NULL END) AS hbig_2m,
        COUNT(CASE WHEN contact_type = 'infant' AND hepb_dose1_date IS NULL AND (hbig_vacc_date > dce.birth_date + INTERVAL '2 months' OR hbig_vacc_date IS NULL) THEN 1 ELSE NULL END) AS neither_2m,
        COUNT(CASE WHEN contact_type = 'infant' AND hepb_dose1_date <= dce.birth_date + interval '8 months' AND hbig_vacc_date <= dce.birth_date + INTERVAL '7 days' THEN 1 ELSE NULL END) AS both_8m,
        COUNT(CASE WHEN contact_type = 'infant' AND hepb_dose1_date <= dce.birth_date + interval '8 months' THEN 1 ELSE NULL END) AS dose1_8m,
        COUNT(CASE WHEN contact_type = 'infant' AND hbig_vacc_date <= dce.birth_date + interval '8 months' THEN 1 ELSE NULL END) AS hbig_8m,
        COUNT(CASE WHEN contact_type = 'infant' AND hepb_dose1_date IS NULL AND (hbig_vacc_date > dce.birth_date + INTERVAL '8 months' OR hbig_vacc_date IS NULL) THEN 1 ELSE NULL END) AS neither_8m,
        COUNT(CASE WHEN contact_type = 'infant' AND hepb_dose1_date <= dce.birth_date + interval '12 months' AND hbig_vacc_date <= dce.birth_date + INTERVAL '7 days' THEN 1 ELSE NULL END) AS both_12m,
        COUNT(CASE WHEN contact_type = 'infant' AND hepb_dose1_date <= dce.birth_date + interval '12 months' THEN 1 ELSE NULL END) AS dose1_12m,
        COUNT(CASE WHEN contact_type = 'infant' AND hbig_vacc_date <= dce.birth_date + interval '12 months' THEN 1 ELSE NULL END) AS hbig_12m,
        COUNT(CASE WHEN contact_type = 'infant' AND hepb_dose1_date IS NULL AND (hbig_vacc_date > dce.birth_date + INTERVAL '12 months' OR hbig_vacc_date IS NULL) THEN 1 ELSE NULL END) AS neither_12m,
        COUNT(CASE WHEN contact_type = 'infant' AND hepb_dose1_date IS NOT NULL AND hepb_dose2_date IS NOT NULL AND hepb_dose3_date IS NOT NULL AND hepb_dose4_date IS NOT NULL THEN 1 ELSE NULL END) AS four_dose,
        COUNT(CASE WHEN contact_type = 'infant' AND hepb_dose1_date IS NOT NULL AND hepb_dose2_date IS NOT NULL AND hepb_dose3_date IS NOT NULL AND hepb_dose4_date IS NOT NULL AND hepb_dose5_date IS NOT NULL THEN 1 ELSE NULL END) AS five_dose,
        COUNT(CASE WHEN contact_type = 'infant' AND hepb_dose1_date IS NOT NULL AND hepb_dose2_date IS NOT NULL AND hepb_dose3_date IS NOT NULL AND hepb_dose4_date IS NOT NULL AND hepb_dose5_date IS NOT NULL AND hepb_dose6_date IS NOT NULL THEN 1 ELSE NULL END) AS six_dose,
        COUNT(CASE WHEN contact_type = 'infant' AND (get_contact_hbsag_before(dce.id, hepb_dose1_date)).lab_test_date <= dce.birth_date + INTERVAL '12 months' AND (get_contact_antihb_after(dce.id, hepb_dose1_date)).lab_test_date <= dce.birth_date + INTERVAL '12 months' THEN 1 ELSE NULL END) AS serotest_12m,
        COUNT(CASE WHEN contact_type = 'infant' AND (get_contact_hbsag_before(dce.id, hepb_dose1_date)).lab_test_date <= dce.birth_date + INTERVAL '15 months' AND (get_contact_antihb_after(dce.id, hepb_dose1_date)).lab_test_date <= dce.birth_date + INTERVAL '15 months' THEN 1 ELSE NULL END) AS serotest_15m,
        COUNT(CASE WHEN contact_type = 'infant' AND ((get_contact_hbsag_after(dce.id, hepb_dose1_date)).lab_test_date IS NULL OR (get_contact_antihb_after(dce.id, hepb_dose1_date)).lab_test_date IS NULL) THEN 1 ELSE NULL END) AS total_serotest,
        COUNT(CASE WHEN contact_type = 'infant' AND (get_contact_hbsag_after(dce.id, hepb_dose1_date)).test_result ~ 'Positive' THEN 1 ELSE NULL END) AS positive_antihb,
        COUNT(CASE WHEN contact_type = 'infant' AND (get_contact_antihb_after(dce.id, hepb_dose1_date)).test_result ~ 'Positive' THEN 1 ELSE NULL END) AS positive_hbsag,
        -- XXX Still have com vax vacc date here, to fix
        COUNT(CASE WHEN contact_type = 'infant' AND 'com_vax_vacc_date' IS NOT NULL THEN 1 ELSE NULL END) AS received_comvax,
        COUNT(CASE WHEN contact_type IN ('Sexual', 'Household') THEN 1 ELSE NULL END) AS total_hs,
        COUNT(CASE WHEN contact_type IN ('Sexual', 'Household') AND disposition IS NULL THEN 1 ELSE NULL END) AS active_hs,
        COUNT(CASE WHEN contact_type IN ('Sexual', 'Household') AND disposition = 'Completed' THEN 1 ELSE NULL END) AS completed_hs,
        COUNT(CASE WHEN contact_type IN ('Sexual', 'Household') AND disposition = 'Provider refusal' THEN 1 ELSE NULL END) AS provider_refusal_hs,
        COUNT(CASE WHEN contact_type IN ('Sexual', 'Household') AND disposition = 'Refused preventative treatment' THEN 1 ELSE NULL END) AS refused_treatment_hs,
        COUNT(CASE WHEN contact_type IN ('Sexual', 'Household') AND disposition = 'Moved' THEN 1 ELSE NULL END) AS moved_hs,
        COUNT(CASE WHEN contact_type IN ('Sexual', 'Household') AND disposition = 'Unable to locate' THEN 1 ELSE NULL END) AS unable_to_locate_hs,
        COUNT(CASE WHEN contact_type IN ('Sexual', 'Household') AND disposition = 'Died' THEN 1 ELSE NULL END) AS died_hs,
        COUNT(CASE WHEN contact_type IN ('Sexual', 'Household') AND disposition = 'False positive mother/case' THEN 1 ELSE NULL END) AS false_positive_hs,
        COUNT(CASE WHEN contact_type IN ('Sexual', 'Household') AND disposition = 'Other' THEN 1 ELSE NULL END) AS other_hs,
        COUNT(CASE WHEN contact_type IN ('Sexual', 'Household') AND ((get_contact_hbsag_before(dce.id, hepb_dose1_date)).test_result IS NOT NULL OR (get_contact_antihb_before(dce.id, hepb_dose1_date)).test_result IS NOT NULL) THEN 1 ELSE NULL END) AS total_hs_tested,
        COUNT(CASE WHEN contact_type IN ('Sexual', 'Household') AND (get_contact_hbsag_after(dce.id, hepb_dose1_date)).test_result ~ 'Positive' THEN 1 ELSE NULL END) AS hbsag_pos_hs,
        COUNT(CASE WHEN contact_type IN ('Sexual', 'Household') AND (get_contact_antihb_after(dce.id, hepb_dose1_date)).test_result ~ 'Positive' THEN 1 ELSE NULL END) AS antihb_pos_hs,
        COUNT(CASE WHEN contact_type IN ('Sexual', 'Household') AND hepb_dose1_date IS NOT NULL THEN 1 ELSE NULL END) AS dose1_hs,
        COUNT(CASE WHEN contact_type IN ('Sexual', 'Household') AND hepb_dose1_date IS NOT NULL AND hepb_dose2_date IS NOT NULL THEN 1 ELSE NULL END) AS dose2_hs,
        COUNT(CASE WHEN contact_type IN ('Sexual', 'Household') AND hepb_dose1_date IS NOT NULL AND hepb_dose2_date IS NOT NULL AND hepb_dose3_date IS NOT NULL THEN 1 ELSE NULL END) AS dose3_hs,
        -- This labels field 62 as '<6>', suggesting it's a copy of field 6.
        COUNT(CASE WHEN contact_type = 'infant' AND disposition = 'Moved' AND hepb_dose1_date IS NOT NULL AND hbig_vacc_date IS NOT NULL THEN 1 ELSE NULL END) AS dose1_hbig_trans,
        COUNT(CASE WHEN contact_type = 'infant' AND disposition = 'Moved' AND hepb_dose1_date IS NULL AND hbig_vacc_date IS NOT NULL THEN 1 ELSE NULL END) AS hbig_trans,
        COUNT(CASE WHEN contact_type = 'infant' AND disposition = 'Moved' AND hepb_dose1_date IS NOT NULL AND hbig_vacc_date IS NULL THEN 1 ELSE NULL END) AS dose1_trans,
        COUNT(CASE WHEN contact_type = 'infant' AND disposition = 'Moved' AND hepb_dose1_date IS NULL AND hbig_vacc_date IS NULL THEN 1 ELSE NULL END) AS neither_trans,
        COUNT(CASE WHEN contact_type = 'infant' AND disposition = 'Moved' AND hepb_dose1_date < dce.birth_date + INTERVAL '8 months' AND hepb_dose2_date < dce.birth_date + INTERVAL '8 months' AND hepb_dose3_date < dce.birth_date + INTERVAL '8 months' AND hbig_vacc_date < dce.birth_date + INTERVAL '8 months' THEN 1 ELSE NULL END) AS all_8m_trans,
        COUNT(CASE WHEN contact_type = 'infant' AND disposition = 'Moved' AND hepb_dose1_date < dce.birth_date + INTERVAL '8 months' AND hepb_dose2_date < dce.birth_date + INTERVAL '12 months' AND hepb_dose3_date < dce.birth_date + INTERVAL '12 months' AND hbig_vacc_date < dce.birth_date + INTERVAL '12 months' THEN 1 ELSE NULL END) AS all_12m_trans
    FROM
        trisano.dw_contact_events_view dce
        JOIN trisano.dw_morbidity_events_view dme
            ON (dce.parent_id = dme.id)
        LEFT JOIN (
            SELECT
                dw_contact_events_id AS contact_event_id,
                earliest_date(trisano.array_accum(hbig_vacc_date )) AS hbig_vacc_date,
                earliest_date(trisano.array_accum(hebp_dose1_date)) AS hepb_dose1_date,
                earliest_date(trisano.array_accum(hepb_dose2_date)) AS hepb_dose2_date,
                earliest_date(trisano.array_accum(hepb_dose3_date)) AS hepb_dose3_date,
                earliest_date(trisano.array_accum(hepb_dose4_date)) AS hepb_dose4_date,
                earliest_date(trisano.array_accum(hepb_dose5_date)) AS hepb_dose5_date,
                earliest_date(trisano.array_accum(hepb_dose6_date)) AS hepb_dose6_date
            FROM (
                SELECT
                    dw_contact_events_id,
                    CASE WHEN treatment_name = 'HBIG' THEN date_of_treatment ELSE NULL END AS hbig_vacc_date,
                    CASE WHEN treatment_name = 'Hep B Dose 1 Vaccination' THEN date_of_treatment ELSE NULL END AS hebp_dose1_date,
                    CASE WHEN treatment_name = 'Hep B Dose 2 Vaccination' THEN date_of_treatment ELSE NULL END AS hepb_dose2_date,
                    -- The ~ is intentional
                    CASE WHEN treatment_name ~ 'Hep B Dose 3 Vaccination' THEN date_of_treatment ELSE NULL END AS hepb_dose3_date,
                    CASE WHEN treatment_name = 'Hep B Dose 4 Vaccination' THEN date_of_treatment ELSE NULL END AS hepb_dose4_date,
                    CASE WHEN treatment_name = 'Hep B Dose 5 Vaccination' THEN date_of_treatment ELSE NULL END AS hepb_dose5_date,
                    CASE WHEN treatment_name = 'Hep B Dose 6 Vaccination' THEN date_of_treatment ELSE NULL END AS hepb_dose6_date
                FROM
                    trisano.dw_contact_treatments_events_view dct
                WHERE
                    treatment_given = 'Yes'
            ) treatments_split
            GROUP BY dw_contact_events_id
        ) treatments_agg
            ON (treatments_agg.contact_event_id = dce.id)
    WHERE
        dce.disease_name = 'Hepatitis B Pregnancy Event' AND
        dme.actual_delivery_date BETWEEN trisano.make_date('${START_DATE}'::TEXT, CURRENT_DATE) AND trisano.make_date('${END_DATE}'::TEXT, CURRENT_DATE)
--) foo
;
