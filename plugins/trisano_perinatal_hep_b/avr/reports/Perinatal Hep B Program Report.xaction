<?xml version="1.0" encoding="UTF-8"?>
<action-sequence> 
  <title>Perinatal Hep B Program Report</title>
  <version>1</version>
  <documentation> 
    <author>joe</author>  
    <description>Hepatitis B Pregnancy Event Program Report</description>  
    <icon>PentahoReporting.png</icon>  
    <help/>  
    <result-type>report</result-type> 
  </documentation>

  <inputs> 
    <outputType type="string"> 
      <sources> 
        <request>outputType</request>  
        <request>type</request> 
      </sources>  
      <default-value><![CDATA[html]]></default-value> 
    </outputType>  
    <outputTypeList type="property-map-list"> 
      <sources> 
        <runtime>outputTypeList</runtime> 
      </sources>  
      <default-value type="property-map-list"> 
        <property-map> 
          <entry key="report-output-desc">PDF</entry>  
          <entry key="report-output-type-id">pdf</entry> 
        </property-map>  
        <property-map> 
          <entry key="report-output-desc">Excel</entry>  
          <entry key="report-output-type-id">xls</entry> 
        </property-map>  
        <property-map> 
          <entry key="report-output-desc">Word</entry>  
          <entry key="report-output-type-id">rtf</entry> 
        </property-map>  
        <property-map> 
          <entry key="report-output-desc">Web Page</entry>  
          <entry key="report-output-type-id">html</entry> 
        </property-map>  
        <property-map> 
          <entry key="report-output-desc">Comma Separated Value</entry>  
          <entry key="report-output-type-id">csv</entry> 
        </property-map> 
      </default-value> 
    </outputTypeList>  
    <jurisdiction type="string"> 
      <sources> 
        <request>jurisdiction</request> 
      </sources>  
      <default-value/> 
    </jurisdiction>  
    <start_date type="string"> 
      <sources> 
        <request>start_date</request> 
      </sources>  
      <default-value/> 
    </start_date>  
    <end_date type="string"> 
      <sources> 
        <request>end_date</request> 
      </sources>  
      <default-value/> 
    </end_date> 
  </inputs>

  <outputs/>

  <resources> 
    <report-definition> 
      <solution-file> 
        <location>Perinatal Hep B Program Report.xml</location>  
        <mime-type>text/xml</mime-type> 
      </solution-file> 
    </report-definition> 
  </resources>
  
  <actions> 
    <action-definition>
      <component-name>SQLLookupRule</component-name>
      <action-type>Relational</action-type>
      <action-outputs>
        <query-result type="result-set" mapping="jurisdictions"/>
        <name type="string"/>
      </action-outputs>
      <component-definition>
        <jndi><![CDATA[TriSano]]></jndi>
        <live><![CDATA[true]]></live>
        <query><![CDATA[select
    distinct p.name
from
    places_view p
    join places_types_view pt
        on (p.id = pt.place_id)
    join codes_view c
        on (c.id = pt.type_id)
where
    c.code_description = 'Jurisdiction' order by 1 asc]]></query>
      </component-definition>
    </action-definition>

    <action-definition> 
      <component-name>SecureFilterComponent</component-name>
      <action-type>Secure Filter Description</action-type>
      <action-inputs> 
        <outputTypeList type="property-map-list"/>  
        <outputType type="string"/>  
        <jurisdiction type="string"/>  
        <start_date type="string"/>  
        <end_date type="string"/>  
        <jurisdictions type="result-set"/>
      </action-inputs>
      <component-definition> 
        <selections> 
          <outputType style="select"> 
            <title>Choose Report Format</title>  
            <filter value-col-name="report-output-type-id" display-col-name="report-output-desc">outputTypeList</filter> 
          </outputType>  
          <jurisdiction style="list"> 
            <title>Choose jurisdiction</title>  
            <filter value-col-name="name" display-col-name="name">jurisdictions</filter>
          </jurisdiction>  
          <start_date style="text-box" filter="none"> 
            <title>Choose start date (YYYY-MM-DD)</title> 
          </start_date>  
          <end_date style="text-box" filter="none"> 
            <title>Choose end date (YYYY-MM-DD)</title> 
          </end_date> 
        </selections> 
      </component-definition> 
    </action-definition>
  
    <action-definition> 
      <component-name>SQLLookupRule</component-name>
      <action-inputs> 
        <jurisdiction type="string"/>  
        <start_date type="string"/>  
        <end_date type="string"/> 
      </action-inputs>
      <action-outputs> 
        <query-result type="result-set" mapping="query_result"/> 
      </action-outputs>
      <component-definition> 
        <jndi><![CDATA[TriSano]]></jndi>  
        <query><![CDATA[select coalesce(sum(total), 0) as total_events from phepb_reports.report4 where investigating_jurisdiction = '{PREPARE:jurisdiction}' and actual_delivery_date between trisano.make_date('{PREPARE:start_date}', current_date) AND trisano.make_date('{PREPARE:end_date}', current_date)]]></query>  
        <live><![CDATA[true]]></live> 
      </component-definition> 
    </action-definition>
  
    <action-definition> 
      <component-name>SQLLookupRule</component-name>
      <action-inputs> 
        <start_date type="string"/>  
        <end_date type="string"/>  
        <jurisdiction type="string"/> 
      </action-inputs>
      <action-outputs> 
        <prepared_component type="sql-query" mapping="disposition"/> 
      </action-outputs>
      <component-definition> 
        <jndi><![CDATA[TriSano]]></jndi>  
        <query><![CDATA[SELECT
     COALESCE(SUM(total), 0) AS total,
     COALESCE(SUM(completed), 0) AS completed,
     COALESCE(SUM(false_pos), 0) AS false_pos,
     COALESCE(SUM(infant_adopted), 0) AS infant_adopted,
     COALESCE(SUM(infant_died), 0) AS infant_died,
     COALESCE(SUM(out_of_jurisdiction), 0) AS out_of_jurisdiction,
     COALESCE(SUM(refused_participate), 0) AS refused_participate,
     COALESCE(SUM(unable_locate), 0) AS unable_locate,
     COALESCE(SUM(other), 0) AS other,
     COALESCE(SUM(disposition_blank), 0) AS disposition_blank
FROM
     phepb_reports.report4
WHERE actual_delivery_date BETWEEN trisano.make_date('{PREPARELATER:start_date}', current_date) AND trisano.make_date('{PREPARELATER:end_date}', current_date) and investigating_jurisdiction = '{PREPARELATER:jurisdiction}']]></query>  
        <live><![CDATA[true]]></live> 
      </component-definition> 
    </action-definition>
  
    <action-definition> 
      <component-name>SQLLookupRule</component-name>
      <action-inputs> 
        <start_date type="string"/>  
        <end_date type="string"/>  
        <jurisdiction type="string"/> 
      </action-inputs>
      <action-outputs> 
        <prepared_component type="sql-query" mapping="treatment1"/> 
      </action-outputs>
      <component-definition> 
        <jndi><![CDATA[TriSano]]></jndi>  
        <query><![CDATA[SELECT
    COALESCE(SUM(infant_contacts), 0) AS infant_contacts,
    COALESCE(SUM(both_24), 0) AS both_24,
    COALESCE(SUM(dose1_24), 0) AS dose1_24,
    COALESCE(SUM(hbig_24), 0) AS hbig_24,
    COALESCE(SUM(neither_24), 0) AS neither_24,
    COALESCE(SUM(both_48), 0) AS both_48,
    COALESCE(SUM(dose1_48), 0) AS dose1_48,
    COALESCE(SUM(hbig_48), 0) AS hbig_48,
    COALESCE(SUM(neither_48), 0) AS neither_48,
    COALESCE(SUM(both_7d), 0) AS both_7d,
    COALESCE(SUM(dose1_7d), 0) AS dose1_7d,
    COALESCE(SUM(hbig_7d), 0) AS hbig_7d,
    COALESCE(SUM(neither_7d), 0) AS neither_7d
FROM
    phepb_reports.report4
WHERE actual_delivery_date BETWEEN trisano.make_date('{PREPARELATER:start_date}', current_date) AND trisano.make_date('{PREPARELATER:end_date}', current_date) and investigating_jurisdiction = '{PREPARELATER:jurisdiction}']]></query>  
        <live><![CDATA[true]]></live> 
      </component-definition> 
    </action-definition>
  
    <action-definition> 
      <component-name>SQLLookupRule</component-name>
      <action-inputs> 
        <start_date type="string"/>  
        <end_date type="string"/>  
        <jurisdiction type="string"/> 
      </action-inputs>
      <action-outputs> 
        <prepared_component type="sql-query" mapping="non_infant"/> 
      </action-outputs>
      <component-definition> 
        <jndi><![CDATA[TriSano]]></jndi>  
        <query><![CDATA[SELECT
    COALESCE(SUM(total_hs), 0) AS total_hs,
    COALESCE(SUM(completed_hs), 0) AS completed_hs,
    COALESCE(SUM(false_positive_hs), 0) AS false_positive_hs,
    COALESCE(SUM(out_of_jurisdiction_hs), 0) AS out_of_jurisdiction_hs,
    COALESCE(SUM(refused_hs), 0) AS refused_hs,
    COALESCE(SUM(unable_to_locate_hs), 0) AS unable_to_locate_hs,
    COALESCE(SUM(other_hs), 0) AS other_hs,
    COALESCE(SUM(disposition_blank_hs), 0) AS disposition_blank_hs,
    COALESCE(SUM(total_hs_tested), 0) AS total_hs_tested,
    COALESCE(SUM(hbsag_pos_hs), 0) AS hbsag_pos_hs,
    COALESCE(SUM(antihb_pos_hs), 0) AS antihb_pos_hs,
    COALESCE(SUM(dose1_hs), 0) AS dose1_hs,
    COALESCE(SUM(dose2_hs), 0) AS dose2_hs,
    COALESCE(SUM(dose3_hs), 0) AS dose3_hs
FROM
    phepb_reports.report4
WHERE actual_delivery_date BETWEEN trisano.make_date('{PREPARELATER:start_date}', current_date) AND trisano.make_date('{PREPARELATER:end_date}', current_date) and investigating_jurisdiction = '{PREPARELATER:jurisdiction}']]></query>  
        <live><![CDATA[true]]></live> 
      </component-definition> 
    </action-definition>
  
    <action-definition> 
      <component-name>SQLLookupRule</component-name>
      <action-inputs> 
        <start_date type="string"/>  
        <end_date type="string"/>  
        <jurisdiction type="string"/> 
      </action-inputs>
      <action-outputs> 
        <prepared_component type="sql-query" mapping="moved"/> 
      </action-outputs>
      <component-definition> 
        <jndi><![CDATA[TriSano]]></jndi>  
        <query><![CDATA[SELECT
    COALESCE(SUM(out_of_jurisdiction), 0) AS out_of_jurisdiction_count,
    COALESCE(SUM(dose1_hbig_trans), 0) AS dose1_hbig_trans,
    COALESCE(SUM(hbig_trans), 0) AS hbig_trans,
    COALESCE(SUM(dose1_trans), 0) AS dose1_trans,
    COALESCE(SUM(neither_trans), 0) AS neither_trans,
    COALESCE(SUM(all_8m_trans), 0) AS all_8m_trans,
    COALESCE(SUM(all_12m_trans), 0) AS all_12m_trans
FROM
    phepb_reports.report4
WHERE actual_delivery_date BETWEEN trisano.make_date('{PREPARELATER:start_date}', current_date) AND trisano.make_date('{PREPARELATER:end_date}', current_date) and investigating_jurisdiction = '{PREPARELATER:jurisdiction}']]></query>  
        <live><![CDATA[true]]></live> 
      </component-definition> 
    </action-definition>
  
    <action-definition> 
      <component-name>SQLLookupRule</component-name>
      <action-inputs> 
        <start_date type="string"/>  
        <end_date type="string"/>  
        <jurisdiction type="string"/> 
      </action-inputs>
      <action-outputs> 
        <prepared_component type="sql-query" mapping="treatment2"/> 
      </action-outputs>
      <component-definition> 
        <jndi><![CDATA[TriSano]]></jndi>  
        <query><![CDATA[SELECT
    COALESCE(SUM(infant_contacts), 0) AS infant_contacts1,
    COALESCE(SUM(both_2m), 0) AS both_2m,
    COALESCE(SUM(dose1_2m), 0) AS dose1_2m,
    COALESCE(SUM(hbig_2m), 0) AS hbig_2m,
    COALESCE(SUM(neither_2m), 0) AS neither_2m,
    COALESCE(SUM(both_8m), 0) AS both_8m,
    COALESCE(SUM(dose1_8m), 0) AS dose1_8m,
    COALESCE(SUM(hbig_8m), 0) AS hbig_8m,
    COALESCE(SUM(neither_8m), 0) AS neither_8m,
    COALESCE(SUM(both_12m), 0) AS both_12m,
    COALESCE(SUM(dose1_12m), 0) AS dose1_12m,
    COALESCE(SUM(hbig_12m), 0) AS hbig_12m,
    COALESCE(SUM(neither_12m), 0) AS neither_12m
FROM
    phepb_reports.report4
WHERE actual_delivery_date BETWEEN trisano.make_date('{PREPARELATER:start_date}', current_date) AND trisano.make_date('{PREPARELATER:end_date}', current_date) and investigating_jurisdiction = '{PREPARELATER:jurisdiction}']]></query>  
        <live><![CDATA[true]]></live> 
      </component-definition> 
    </action-definition>
  
    <action-definition> 
      <component-name>SQLLookupRule</component-name>
      <action-inputs> 
        <start_date type="string"/>  
        <end_date type="string"/>  
        <jurisdiction type="string"/> 
      </action-inputs>
      <action-outputs> 
        <prepared_component type="sql-query" mapping="treatment3"/> 
      </action-outputs>
      <component-definition> 
        <jndi><![CDATA[TriSano]]></jndi>  
        <query><![CDATA[SELECT
    COALESCE(SUM(infant_contacts), 0) AS infant_contacts3,
    COALESCE(SUM(four_dose), 0) AS four_dose,
    COALESCE(SUM(five_dose), 0) AS five_dose,
    COALESCE(SUM(six_dose), 0) AS six_dose,
    COALESCE(SUM(serotest_12m), 0) AS serotest_12m,
    COALESCE(SUM(serotest_15m), 0) AS serotest_15m,
    COALESCE(SUM(total_serotest), 0) AS total_serotest,
    COALESCE(SUM(positive_antihb), 0) AS positive_antihb,
    COALESCE(SUM(positive_hbsag), 0) AS positive_hbsag,
    COALESCE(SUM(received_comvax), 0) AS received_comvax
FROM
    phepb_reports.report4
WHERE actual_delivery_date BETWEEN trisano.make_date('{PREPARELATER:start_date}', current_date) AND trisano.make_date('{PREPARELATER:end_date}', current_date) and investigating_jurisdiction = '{PREPARELATER:jurisdiction}']]></query>  
        <live><![CDATA[true]]></live> 
      </component-definition> 
    </action-definition>
  
    <action-definition> 
      <component-name>JFreeReportComponent</component-name>
      <action-type>report</action-type>
      <action-inputs> 
        <output-type type="string" mapping="outputType"/>  
        <data type="result-set" mapping="query_result"/>  
        <disposition type="result-set"/>  
        <treatment1 type="result-set"/>  
        <non_infant type="result-set"/>  
        <moved type="result-set"/>  
        <treatment2 type="result-set"/>  
        <treatment3 type="result-set"/>  
        <jurisdiction type="string"/>
        <start_date type="string"/>
        <end_date type="string"/>
      </action-inputs>
      <action-resources> 
        <report-definition type="resource"/> 
      </action-resources>
      <component-definition/> 
    </action-definition>
 
  </actions> 
</action-sequence>
